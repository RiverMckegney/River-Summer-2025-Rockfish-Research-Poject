guides(fill = guide_legend((title = "Reproductive State"))) +
theme_classic(base_size = 10)
print(primary_sample_barplot)
ggsave(filename = "data-images/.png", plot = primary_sample_barplot, device = "png")
ggsave(filename = "data-images/primary_sample_barplot.pdf", plot = primary_sample_barplot, device = "pdf")
# pH
# Summary stats
# Primary data
Primary_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(pH), 3),
mean = round(mean(pH), 3),
sd = round(sd(pH), 3),
cv = round(sd(pH)/mean(pH), 3)) %>%
ungroup()
# pH boxplot
# Primary samples
pH_primary_boxplot <- ggplot(data = Primary_Samples, aes(x = Pregnant.Or.Atresia, y = pH, fill = Ambient.Or.OAH)) +
geom_boxplot(aes(x = Pregnant.Or.Atresia, y = pH, fill = Ambient.Or.OAH)) +
geom_point(aes(color = Ambient.Or.OAH), position = position_dodge(width = 0.75), alpha = 0.3, color = "black") +
labs(title = "Primary pH", x = "Parturition Type", y = "pH") +
guides(fill = guide_legend((title = "Treatment Type"))) +
scale_fill_manual(values = c("Ambient" = "#189bff", "OAH" = "#598c78")) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(pH_primary_boxplot)
ggsave(filename = "data-images/pH_primary_boxplot.pdf", plot = pH_primary_boxplot, device = "pdf")
ggsave(filename = "data-images/pH_primary_boxplot.png", plot = pH_primary_boxplot, device = "png")
?geom_density
?stat_function
# pH
# Parametric Assumptions
# Data Distribution
# Frequency Histograms
hist(Primary_Samples$pH)
# Density vs normality curve histograms
Primary_Samples %>%
ggplot(aes(x = pH)) +
geom_histogram(bins = 20) +
stat_function(fun = dnorm, args = c(mean = mean(Primary_Samples$pH), sd = sd(Primary_Samples$pH)), col = "green") +
geom_density(col = "black") +
labs(title = "pH Primary Sample Distribution")
# With legend label
Primary_Samples %>%
ggplot(aes(x = pH)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = dnorm, args = c(mean = mean(Primary_Samples$pH), sd = sd(Primary_Samples$pH)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "pH Primary Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# pH
# Parametric Assumptions:
# Assessing Normality
# Normality Plots
# Note: If data is non-normal considering applying transformation
# lm model of primary data
pH_primary_lm_int <- lm(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = Primary_Samples)
pH_primary_res_int_qqplot <- ggqqplot(residuals(pH_lm_int)) +
labs(title = "Primary pH Interactive Residual QQplot",
subtitle = "lm(pH ~ Parturition Outcome * Treatment)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
# pH
# Parametric Assumptions:
# Assessing Normality
# Normality Plots
# Note: If data is non-normal considering applying transformation
# lm model of primary data
pH_primary_lm_int <- lm(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = Primary_Samples)
pH_primary_res_int_qqplot <- ggqqplot(residuals(pH_primary_lm_int)) +
labs(title = "Primary pH Interactive Residual QQplot",
subtitle = "lm(pH ~ Parturition Outcome * Treatment)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
ggsave(filename = "data-images/pH_primary_res_int_qqplot.pdf", plot = pH_primary_res_int_qqplot, device = "pdf")
ggsave(filename = "data-images/pH_primary_res_int_qqplot.png", plot = pH_primary_res_int_qqplot, device = "png")
install.packages("DHARMa")
install.packages("patchwork")
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
library(conover.test) # For the conover.Iman() test function
library(DescTools) # Contain alternative ConoverTest function
library(rstatix) # tidyverse adapted stat tests and mshapiro_test() functions
library(DHARMa) # For multi-level lm models and shapiro test
library(patchwork) # For combining ggplots
?lmer\
?lmer
pH_primary_lmer_int <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = Primary_Samples)
pH_primary_lmer_int <- lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)
pH_primary_lmer_int <- lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)
pH_primary_res_int_qqplot <- ggqqplot(residuals(pH_primary_lmer_int)) +
labs(title = "Primary pH Interactive Residual QQplot",
subtitle = "lm(pH ~ Parturition Outcome * Treatment)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
# pH
# Parametric Assumptions:
# Assessing Normality
# Normality Plots
# Note: If data is non-normal considering applying transformation
# lm model of primary data
pH_primary_lmer_int <- lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)
pH_primary_res_int_qqplot <- ggqqplot(residuals(pH_primary_lmer_int)) +
labs(title = "Primary pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
ggsave(filename = "data-images/pH_primary_res_int_qqplot.pdf", plot = pH_primary_res_int_qqplot, device = "pdf")
ggsave(filename = "data-images/pH_primary_res_int_qqplot.png", plot = pH_primary_res_int_qqplot, device = "png")
# pH
# Parametric Assumptions:
# Assessing Normality
# Normality Plots
# Note: If data is non-normal considering applying transformation
# lm model of primary data
pH_primary_lmer_int <- lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)
# Display model
summary(pH_primary_lmer_int)
pH_primary_res_int_qqplot <- ggqqplot(residuals(pH_primary_lmer_int)) +
labs(title = "Primary pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
ggsave(filename = "data-images/pH_primary_res_int_qqplot.pdf", plot = pH_primary_res_int_qqplot, device = "pdf")
ggsave(filename = "data-images/pH_primary_res_int_qqplot.png", plot = pH_primary_res_int_qqplot, device = "png")
pH_primary_lmer <- lmer(pH ~ Pregnant.Or.Atresia + Ambient.Or.OAH, data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Pregnant.Or.Atresia + Ambient.Or.OAH + (1|Ambient.Or.OAH), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Pregnant.Or.Atresia + Ambient.Or.OAH + (1|Ambient.Or.OAH) + (1|Pregnant.Or.Atresia), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Pregnant.Or.Atresia + Ambient.Or.OAH + (Pregnant.Or.Atresia | Patient.ID_edited), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Pregnant.Or.Atresia + Ambient.Or.OAH + (Ambient.Or.OAH | Patient.ID_edited), data = Primary_Samples)
View(Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + (1|Patient.ID_edited), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Display model
summary(pH_primary_lmer_int)
lmer(pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia (1|Pregnant.Or.Atresia), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia (1|Pregnant.Or.Atresia), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Display model
summary(pH_primary_lmer_int)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Display model
summary(pH_primary_lmer_int)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Display model
summary(pH_primary_lmer)
summary(pH_primary_lmer)
visualize(pH_primary_lmer, plot = "model", formula = pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia | Ambient.Or.OAH, sample = 20)
summary(pH_primary_lmer)
plot(pH_primary_lmer, plot = "model", formula = pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia | Ambient.Or.OAH, sample = 20)
pH Parametric Assessment
Testing Normality
```{r}
# pH
# Parametric Assumptions
# Assessing Normality
# Descriptive stat test: Stat.desc
# Z-score reflected in 'skew.2SE' and 'kurt.2SE'
# If these values are below 0.96 this indicates normality
# Note these values are sensitive to sample size, and are most effective for relatively small sample sizes approximately n = 30-50 range
# Note Alternative methods, all appear to display same results, not sure exactly how to incorporate an lm or aov model into the stat.desc function...
# General samples
# Other methods:
#stat.desc(General_Samples$pH, norm = TRUE)
# stat.desc(General_Samples[, c("pH", "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
# Primary samples
Primary_Samples %>%
summarise(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
Primary_Samples %>%
summarise(pH, Ambient.Or.OAH ~ Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
# Primary samples
Primary_Samples %>%
group_by(pH, Ambient.Or.OAH ~ Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
Primary_Samples %>%
group_by(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
Primary_Samples %>%
group_by(pH) %>%
stat.desc(norm = TRUE)
Primary_Samples %>%
group_by(Ambient.Or.OAH, Pregnant.Or.Atresia)
summarize(pH) %>%
stat.desc(norm = TRUE)
Primary_Samples %>%
select(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
group_by(Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
summarize(pH) %>%
stat.desc(norm = TRUE)
Primary_Samples %>%
group_by(Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
summarize(pH) %>%
stat.desc(norm = TRUE)
# pH
# Parametric Assumptions
# Assessing Homoscedasticity: Equal Variance of Residuals
# Plotting residuals vs fitted
# general samples: General factor comparison
lm(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples) %>% plot()
# pH
# Parametric Assumptions
# Assessing Homoscedasticity: Equal Variance of Residuals
# Plotting residuals vs fitted
# general samples: General factor comparison
lm(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = Primary_Samples) %>% plot()
# pH
# Parametric Assumptions
# Assessing Homoscedasticity: Equal Variance of Residuals
# Plotting residuals vs fitted
# Primary samples:
lm(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = Primary_Samples) %>% plot()
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Display model
summary(pH_primary_lmer)
# Shapiro test
shapiro.test(pH_primary_lmer)
# Shapiro test
shapiro.test(x = pH_primary_lmer)
# Qqplot of model
pH_primary_res_int_qqplot <- ggqqplot(residuals(pH_primary_lmer_int)) +
labs(title = "Primary pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
# Shapiro test
shapiro.test(x = pH_primary_lmer)
# Suss residuals of model
pH_primary_res_lmer <- residuals(pH_primary_lmer)
# Shapiro test
shapiro.test(pH_primary_res_lmer)
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
library(conover.test) # For the conover.Iman() test function
library(DescTools) # Contain alternative ConoverTest function
library(rstatix) # tidyverse adapted stat tests and mshapiro_test() functions
library(DHARMa) # For multi-level lm models and shapiro test
library(patchwork) # For combining ggplots
pH_primary_simres_plot <- simulateResiduals(fittedModel = pH_primary_lmer)
plot(pH_primary_simres_plot)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
# Summary of model
summary(pH_primary_lmer)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Summary of model
summary(pH_primary_lmer)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Summary of model
summary(pH_primary_lmer)
# Shapiro test
shapiro.test(pH_primary_res_lmer)
plot(pH_primary_simres_plot)
pH_primary_simres_plot <- simulateResiduals(fittedModel = pH_primary_lmer)
plot(pH_primary_simres_plot)
pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Summary of model
summary(pH_primary_lmer)
# Suss residuals of model
pH_primary_res_lmer <- residuals(pH_primary_lmer)
# Summary of model
summary(pH_primary_lmer)
# Suss residuals of model
pH_primary_res_lmer <- residuals(pH_primary_lmer)
# Shapiro test
shapiro.test(pH_primary_res_lmer)
pH_primary_simres_plot <- simulateResiduals(fittedModel = pH_primary_lmer)
plot(pH_primary_simres_plot)
?simulateResiduals()
devtools::install_github("dustinfife/flexplot", ref="development")
install.packages("devtools")
devtools::install_github("dustinfife/flexplot", ref="development")
# Vis with flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
require(flexplot)
visualize(pH_primary_res_lmer, plot = "model", sample = 50)
visualize(pH_primary_res_lmer, plot = "model", sample = 20)
visualize(pH_primary_lmer, plot = "model", sample = 50)
# pH
# Parametric Assumptions
# Viewing Fixed Effects
# Best guess method: Treatment fixed,
# lm model of primary data
# pH_primary_lmer <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Vis with flexplot
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
visualize(pH_primary_lmer, plot = "model", sample = 50)
lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia))
B <- lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia), data = Primary_Samples)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
visualize(A, plot = "model", sample = 50)
A <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
visualize(C, plot = "model", sample = 50)
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
visualize(C, plot = "model", sample = 50)
C <- lmer(pH ~ Ambient.Or.OAH + Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
visualize(C, plot = "model", sample = 50)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
# visualize(C, plot = "model", sample = 50)
visualize(D, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
# pH
# Parametric Assumptions
# Viewing Fixed Effects
# Best guess method: Treatment fixed,
# lm model of primary data
A <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
B <- lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia), data = Primary_Samples)
# Can't visulize...
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
D <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
E <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
# Vis with flexplot
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
# visualize(C, plot = "model", sample = 50)
visualize(D, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
F <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
visualize(F, plot = "model", sample = 50)
# pH
# Parametric Assumptions
# Viewing Fixed Effects
# Best guess method: Treatment fixed,
# lm model of primary data
A <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
B <- lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia), data = Primary_Samples)
# Can't visulize...
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
D <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
E <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
F <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
# Vis with flexplot
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
# visualize(C, plot = "model", sample = 50)
visualize(D, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
visualize(F, plot = "model", sample = 50)
# pH
# Parametric Assumptions
# Viewing Fixed Effects
# Best guess method: Treatment fixed,
# lm model of primary data
A <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
B <- lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia), data = Primary_Samples)
# Can't visulize...
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
D <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
E <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
F <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
G <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Ambient.Or.OAH) + (1|Pregnant.Or.Atresia), data = Primary_Samples)
# Vis with flexplot
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
# visualize(C, plot = "model", sample = 50)
visualize(D, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
visualize(F, plot = "model", sample = 50)
visualize(G, plot = "model", sample = 50)
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Ambient.Or.OAH) + (1|Pregnant.Or.Atresia), data = Primary_Samples)
visualize(C, plot = "model", sample = 50)
# pH
# Parametric Assumptions
# Viewing Fixed Effects
# Best guess method: Treatment fixed,
# lm model of primary data
A <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
B <- lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia), data = Primary_Samples)
# Can't visulize... Oh random effects must be in same order as fixed
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Ambient.Or.OAH) + (1|Pregnant.Or.Atresia), data = Primary_Samples)
D <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
E <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
F <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
G <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
# Vis with flexplot
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
visualize(C, plot = "model", sample = 50)
visualize(D, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
visualize(F, plot = "model", sample = 50)
visualize(G, plot = "model", sample = 50)
# pH
# Parametric Assumptions
# Viewing Fixed Effects
# Best guess method: Treatment fixed,
# lm model of primary data
A <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
B <- lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia), data = Primary_Samples)
# Can't visulize... Oh random effects must be in same order as fixed
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Ambient.Or.OAH) + (1|Pregnant.Or.Atresia), data = Primary_Samples)
D <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
E <- lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)
F <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
G <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
H <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
# Vis with flexplot
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
visualize(C, plot = "model", sample = 50)
visualize(D, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
visualize(F, plot = "model", sample = 50)
visualize(G, plot = "model", sample = 50)
visulize(H, plot = "model", sample = 50)
# pH
# Parametric Assumptions
# Viewing Fixed Effects
# Best guess method: Treatment fixed,
# lm model of primary data
A <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
B <- lmer(pH ~ Ambient.Or.OAH + (1 | Pregnant.Or.Atresia), data = Primary_Samples)
# Can't visulize... Oh random effects must be in same order as fixed
C <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Ambient.Or.OAH) + (1|Pregnant.Or.Atresia), data = Primary_Samples)
D <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
E <- lmer(pH ~ Pregnant.Or.Atresia + (1|Ambient.Or.OAH), data = Primary_Samples)
F <- lmer(pH ~ Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
G <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH + (1|Pregnant.Or.Atresia) + (1|Ambient.Or.OAH), data = Primary_Samples)
# Vis with flexplot
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
visualize(A, plot = "model", sample = 50)
visualize(B, plot = "model", sample = 50)
visualize(C, plot = "model", sample = 50)
visualize(D, plot = "model", sample = 50)
visualize(E, plot = "model", sample = 50)
visualize(F, plot = "model", sample = 50)
visualize(G, plot = "model", sample = 50)
mod1 <- lmer(pH ~ Ambient.Or.OAH * Pregnant.Or.Atresia + (1|Pregnant.Or.Atresia), data = Primary_Samples)
mod2 <- lmer(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH  + (1|Pregnant.Or.Atresia), data = Primary_Samples)
visualize(mod1, plot = "model", sample = 50)
visualize(mod2, plot = "model", sample = 50)
visualize(mod2, plot = "model", sample = 50)
