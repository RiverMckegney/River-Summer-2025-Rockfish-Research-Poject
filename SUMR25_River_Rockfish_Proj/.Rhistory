# Second best guess method:
visualize(pH_ambient_lmer, plot = "model", sample = 50)
# pH ambient data
# Best guess method: Treatment fixed, pregnancy fixed & random
# lm model of primary data
pH_ambient_lmer <- lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)
# Second best guess method:
visualize(pH_ambient_lmer, plot = "model", sample = 50)
# pH
# Parametric Assumptions:
# Assessing Normality
# Summary of model
summary(pH_ambient_lmer)
# Suss residuals of model
pH_ambient_res_lmer <- residuals(pH_ambient_lmer)
# Shapiro test
shapiro.test(pH_ambient_res_lmer)
# pH simulated residuals plot
pH_ambient_simres_plot <- simulateResiduals(fittedModel = pH_ambient_lmer)
plot(pH_ambient_simres_plot)
# Qqplot of model
# pH_ambient_res_qqplot <- ggqqplot(residuals(pH_ambient_lmer)) +
# labs(title = "Ambient pH Interactive Residual QQplot",
#      subtitle = "lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)",
#                                x = "pH Theoretical Quantiles (Predicted values)",
#                                y = "pH Sample Quantiles") +
#   theme(plot.title = element_text(hjust = 0.5),
#         plot.subtitle = element_text(hjust = 0.5))
# print(pH_primary_res_int_qqplot)
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.pdf", plot = pH_ambient_res_int_qqplot, device = "pdf")
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.png", plot = pH_ambient_res_int_qqplot, device = "png")
pH_ambient_simres_plot <- simulateResiduals(fittedModel = pH_ambient_lmer)
plot(pH_ambient_simres_plot)
# pH
# Parametric Assumptions:
# Assessing Normality
# Summary of model
summary(pH_ambient_lmer)
# Suss residuals of model
pH_ambient_res_lmer <- residuals(pH_ambient_lmer)
# Shapiro test
shapiro.test(pH_ambient_res_lmer)
# pH simulated residuals plot
pH_ambient_simres_plot <- simulateResiduals(fittedModel = pH_ambient_lmer)
plot(pH_ambient_simres_plot)
# Qqplot of model
pH_ambient_res_qqplot <- ggqqplot(residuals(pH_ambient_lmer)) +
labs(title = "Ambient pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.pdf", plot = pH_ambient_res_int_qqplot, device = "pdf")
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.png", plot = pH_ambient_res_int_qqplot, device = "png")
# pH
# Parametric Assumptions:
# Assessing Normality
# Summary of model
summary(pH_ambient_lmer)
# Suss residuals of model
pH_ambient_res_lmer <- residuals(pH_ambient_lmer)
# Shapiro test
shapiro.test(pH_ambient_res_lmer)
# pH simulated residuals plot
pH_ambient_simres_plot <- simulateResiduals(fittedModel = pH_ambient_lmer)
plot(pH_ambient_simres_plot)
# Qqplot of model
pH_ambient_res_qqplot <- ggqqplot(residuals(pH_ambient_lmer)) +
labs(title = "Ambient pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.pdf", plot = pH_ambient_res_int_qqplot, device = "pdf")
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.png", plot = pH_ambient_res_int_qqplot, device = "png")
pH_ambient_res_qqplot <- ggqqplot(residuals(pH_ambient_lmer)) +
labs(title = "Ambient pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_primary_res_int_qqplot)
# pH
# Parametric Assumptions:
# Assessing Normality
# Summary of model
summary(pH_ambient_lmer)
# Suss residuals of model
pH_ambient_res_lmer <- residuals(pH_ambient_lmer)
# Shapiro test
shapiro.test(pH_ambient_res_lmer)
# pH simulated residuals plot
pH_ambient_simres_plot <- simulateResiduals(fittedModel = pH_ambient_lmer)
plot(pH_ambient_simres_plot)
# Qqplot of model
pH_ambient_res_qqplot <- ggqqplot(residuals(pH_ambient_lmer)) +
labs(title = "Ambient pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_ambient_res_int_qqplot)
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.pdf", plot = pH_ambient_res_int_qqplot, device = "pdf")
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.png", plot = pH_ambient_res_int_qqplot, device = "png")
# pH
# Parametric Assumptions:
# Assessing Normality
# Summary of model
summary(pH_ambient_lmer)
# Suss residuals of model
pH_ambient_res_lmer <- residuals(pH_ambient_lmer)
# Shapiro test
shapiro.test(pH_ambient_res_lmer)
# pH simulated residuals plot
pH_ambient_simres_plot <- simulateResiduals(fittedModel = pH_ambient_lmer)
plot(pH_ambient_simres_plot)
# Qqplot of model
pH_ambient_res_qqplot <- ggqqplot(residuals(pH_ambient_lmer)) +
labs(title = "Ambient pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(pH_ambient_res_qqplot)
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.pdf", plot = pH_ambient_res_int_qqplot, device = "pdf")
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.png", plot = pH_ambient_res_int_qqplot, device = "png")
# pH
# Parametric Assumptions:
# Assessing Normality
# Summary of model
summary(pH_ambient_lmer)
# Suss residuals of model
pH_ambient_res_lmer <- residuals(pH_ambient_lmer)
# Shapiro test
shapiro.test(pH_ambient_res_lmer)
# pH simulated residuals plot
pH_ambient_simres_plot <- simulateResiduals(fittedModel = pH_ambient_lmer)
plot(pH_ambient_simres_plot)
# Qqplot of model
pH_ambient_res_qqplot <- ggqqplot(residuals(pH_ambient_lmer)) +
labs(title = "Ambient pH Interactive Residual QQplot",
subtitle = "lmer(pH ~ Consensus_Brood_Condition + (1|Consensus_Brood_Condition), data = Ambient_Samples)",
x = "pH Theoretical Quantiles (Predicted values)",
y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 7))
print(pH_ambient_res_qqplot)
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.pdf", plot = pH_ambient_res_int_qqplot, device = "pdf")
# ggsave(filename = "data-images/pH_ambient_res_int_qqplot.png", plot = pH_ambient_res_int_qqplot, device = "png")
# pH
# Ambient samples
# test with lmer
bartlett.test(pH_ambient_res_lmer ~ Ambient_Samples$Ambient.Or.OAH)
# pH
# Ambient samples
# test with lmer
bartlett.test(pH_ambient_res_lmer ~ Ambient_Samples$Consensus_Brood_Condition)
bartlett.test(pH ~ Consensus_Brood_Condition, Ambient_Samples)
leveneTest(pH ~ Consensus_Brood_Condition, Ambient_Samples)
# pH
# Ambient ANOVA Test
# Testing for differences in ambient parturition success metrics
# One-way ANOVA (parametric) or Kruskal-Wallis test (nonparametric)
pH_aov_ambient <- aov(pH ~ Consensus_Brood_Condition, data = Ambient_Only_Samples)
summary(pH_aov_ambient)
# If significant, Post Hoc Test:
# - Tukey's HSD (parametric, normality & equal variance across groups)
# - Dunn's test (non-parametric, if Kruskal-Wallis test is rejected)
# pH
# Ambient ANOVA Test
# Testing for differences in ambient parturition success metrics
# One-way ANOVA (parametric) or Kruskal-Wallis test (nonparametric)
pH_aov_ambient <- aov(pH ~ Consensus_Brood_Condition, data = Ambient_Samples)
summary(pH_aov_ambient)
# If significant, Post Hoc Test:
# - Tukey's HSD (parametric, normality & equal variance across groups)
# - Dunn's test (non-parametric, if Kruskal-Wallis test is rejected)
TukeyHSD(pH_aov_ambient)
# hct
# Summary stats
# Ambient data
Ambient_Samples %>%
group_by(Ambient.Or.OAH, Consensus_Brood_Condition) %>%
summarize(count = n(),
median = round(median(Hct....), 3),
mean = round(mean(Hct....), 3),
sd = round(sd(Hct....), 3),
cv = round(sd(Hct....)/mean(Hct....), 3)) %>%
ungroup()
# hct boxplot
# Ambient Samples
hct_ambient_boxplot <- ggplot(data = Ambient_Samples) +
geom_boxplot(aes(x = Consensus_Brood_Condition, y = Hct....)) +
geom_point(aes(x = Consensus_Brood_Condition, y = Hct....), alpha = 0.5, colour = "black") +
labs(title = "Hematocrit", x = "Parturition Success", y = "Hct (%)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(hct_ambient_boxplot)
ggsave(filename = "data-images/hct_ambient_boxplot.pdf", plot = hct_ambient_boxplot, device = "pdf")
ggsave(filename = "data-images/hct_ambient_boxplot.png", plot = hct_ambient_boxplot, device = "png")
# hct boxplot
# Ambient Samples
hct_ambient_boxplot <- ggplot(data = Ambient_Samples) +
geom_boxplot(aes(x = Consensus_Brood_Condition, y = Hct....)) +
geom_point(aes(x = Consensus_Brood_Condition, y = Hct....), alpha = 0.5, colour = "black") +
labs(title = "Hematocrit", x = "Parturition Success", y = "Hct (%)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 19),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(hct_ambient_boxplot)
ggsave(filename = "data-images/hct_ambient_boxplot.pdf", plot = hct_ambient_boxplot, device = "pdf")
ggsave(filename = "data-images/hct_ambient_boxplot.png", plot = hct_ambient_boxplot, device = "png")
# pH boxplot
# Ambient Samples
pH_ambient_boxplot <- ggplot(data = Ambient_Samples) +
geom_boxplot(aes(x = Consensus_Brood_Condition, y = pH)) +
geom_point(aes(x = Consensus_Brood_Condition, y = pH), alpha = 0.5, colour = "black") +
labs(title = "pH", x = "Parturition Success", y = "pH") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(pH_ambient_boxplot)
ggsave(filename = "data-images/pH_ambient_boxplot.pdf", plot = pH_ambient_boxplot, device = "pdf")
ggsave(filename = "data-images/pH_ambient_boxplot.png", plot = pH_ambient_boxplot, device = "png")
# hct boxplot
# Ambient Samples
hct_ambient_boxplot <- ggplot(data = Ambient_Samples) +
geom_boxplot(aes(x = Consensus_Brood_Condition, y = Hct....)) +
geom_point(aes(x = Consensus_Brood_Condition, y = Hct....), alpha = 0.5, colour = "black") +
labs(title = "Hematocrit", x = "Parturition Success", y = "Hct (%)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(hct_ambient_boxplot)
ggsave(filename = "data-images/hct_ambient_boxplot.pdf", plot = hct_ambient_boxplot, device = "pdf")
ggsave(filename = "data-images/hct_ambient_boxplot.png", plot = hct_ambient_boxplot, device = "png")
# Hct
# Parametric Assumptions
# Data Distribution
# Frequency Histogram
hist(Ambient_Samples$Hct....)
# Density vs normality curve histograms
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Hct
# Parametric Assumptions
# Data Distribution
# Frequency Histogram
hist(Ambient_Samples$Hct....)
# Density vs normality curve histograms
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Hct
# Parametric Assumptions
# Data Distribution
# Frequency Histogram
hist(Ambient_Samples$Hct....)
# Density vs normality curve histograms
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 100)
hct_ambient_y_axis <- dnorm(hct_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
# Hct
# Parametric Assumptions
# Data Distribution
# Frequency Histogram
hct_ambient_hist <- hist(Ambient_Samples$Hct....)
print(hct_ambient_hist)
# Density vs normality curve histograms
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 100)
hct_ambient_y_axis <- dnorm(hct_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 100)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
plot()
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
plot() %>%
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 20)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 50)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 10)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 15)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 17)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 20)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 19)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
hct_ambient_range <- seq(min(Ambient_Samples$Hct....), max(Ambient_Samples$Hct....), length = 19.5)
hct_ambient_y_axis <- dnorm(hct_ambient_range, mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$pH))
hct_ambient_y_axis <- hct_ambient_y_axis * diff(hct_ambient_hist$mids[1:2]) * length(Ambient_Samples$Hct....)
hist(Ambient_Samples$Hct....) +
lines(hct_ambient_range, hct_ambient_y_axis, lwd = 2)
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
plotNormalHistogram() +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
plotNormalHistogram() +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
plotNormalHistogram(Ambient_Samples$Hct....) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
plotNormalHistogram(Ambient_Samples$Hct....)
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
plotNormalDensity() +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
plotNormalHistogram(Ambient_Samples$Hct....)
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
plotNormalDensity(Ambient_Samples$Hct....) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Hct
# Parametric Assumptions
# Data Distribution
# Frequency Histogram
hct_ambient_hist <- hist(Ambient_Samples$Hct....)
print(hct_ambient_hist)
plotNormalHistogram(Ambient_Samples$Hct....)
# Density vs normality curve histograms
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
plotNormalDensity(Ambient_Samples$Hct....)
# pH
# Parametric Assumptions
# Data Distribution
# Frequency Histogram
hist(Ambient_Samples$pH)
plotNormalHistogram(Ambient_Samples$pH)
# Density vs normality curve histograms
Ambient_Samples %>%
ggplot(aes(x = pH)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$pH), sd = sd(Ambient_Samples$pH)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "pH Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
plotNormalDensity(Ambient_Samples$pH)
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
stat_function(fun = dnorm), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
stat_function(fun = dnorm, aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
geom_histogram() +
stat_function(fun = dnorm, aes(col = "Normal Distribution"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram() +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram(freq = FALSE) +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct....)) +
geom_histogram(freq = FALSE) +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct...., y = after_stat(density))) +
geom_histogram() +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Samples %>%
ggplot(aes(x = Hct...., y = )) +
geom_histogram(after_stat(density)) +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Samples$Hct....), sd = sd(Ambient_Samples$Hct....)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Hct Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
