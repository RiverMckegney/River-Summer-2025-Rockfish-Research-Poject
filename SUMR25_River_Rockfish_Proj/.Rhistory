# Frequency Histograms
hist(Amb_Fec_Samples$Cl...mmol.L.)
plotNormalHistogram(Amb_Fec_Samples$Cl...mmol.L.)
# Density plot
Amb_Fec_Samples %>%
ggplot(aes(x = Cl...mmol.L.)) +
stat_function(fun = dnorm, args = c(mean = mean(Amb_Fec_Samples$Cl...mmol.L.), sd = sd(Amb_Fec_Samples$Cl...mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "chloride Weight Adj Fecundity Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Density by brood condition
Amb_Fec_Samples %>%
ggplot(aes(x = Cl...mmol.L.)) +
geom_density(aes(x = Cl...mmol.L., fill = Fecundity_Class), alpha = 0.5)
ggplot(Amb_Fec_Samples, aes(x = Cl...mmol.L.)) +
geom_density(aes(x = Cl...mmol.L.)) +
facet_wrap(Fecundity_Class ~ Ambient.Or.OAH)
plotNormalDensity(Amb_Fec_Samples$Cl...mmol.L.)
# Cl-
# Amb Fec No Atresia Samples
# Frequency Histograms
hist(Amb_Fec_No_Atresia_Samples$Cl...mmol.L.)
plotNormalHistogram(Amb_Fec_No_Atresia_Samples$Cl...mmol.L.)
# Density plot
Amb_Fec_No_Atresia_Samples %>%
ggplot(aes(x = Cl...mmol.L.)) +
stat_function(fun = dnorm, args = c(mean = mean(Amb_Fec_No_Atresia_Samples$Cl...mmol.L.), sd = sd(Amb_Fec_No_Atresia_Samples$Cl...mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Chloride Weight Adj Fecundity Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Density by brood condition
Amb_Fec_No_Atresia_Samples %>%
ggplot(aes(x = Cl...mmol.L.)) +
geom_density(aes(x = Cl...mmol.L., fill = Fecundity_Class), alpha = 0.5)
ggplot(Amb_Fec_No_Atresia_Samples, aes(x = Cl...mmol.L.)) +
geom_density(aes(x = Cl...mmol.L.)) +
facet_wrap(Fecundity_Class ~ Ambient.Or.OAH)
plotNormalDensity(Amb_Fec_No_Atresia_Samples$Cl...mmol.L.)
# Cl-
# Amb Fec No Atresia regression model
chloride_amb_fec_no_atresia_lm <- lm(Cl...mmol.L. ~ All_Fecundity, data = Amb_Fec_No_Atresia_Samples)
chloride_amb_fec_no_atresia_lm_res <- residuals(chloride_amb_fec_no_atresia_lm)
# p-value significant if (a < 0.1 or a < 0.05)
summary(chloride_amb_fec_no_atresia_lm)
chloride_amb_fec_no_atresia_lm_res_plot <- simulateResiduals(fittedModel = chloride_amb_fec_no_atresia_lm)
plot(chloride_amb_fec_no_atresia_lm_res_plot)
# Normality test
shapiro.test(chloride_amb_fec_no_atresia_lm_res)
# scedasticity test requires a categorical variable
# Cl-
# Amb Fec No Atresia Class regression model
chloride_amb_fec_no_atresia_aov_cat <- aov(Cl...mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
summary(chloride_amb_fec_no_atresia_aov_cat)
TukeyHSD(chloride_amb_fec_no_atresia_aov_cat)
# Normality Test
shapiro.test(Amb_Fec_No_Atresia_Samples$Cl...mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(Cl...mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
# Nonparametric variance test:
# Levene's test requires a categorical variable
#LeveneTest(Cl...mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
# Cl-
# Amb Fec Class regression model
chloride_amb_fec_aov_cat <- aov(Cl...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
summary(chloride_amb_fec_aov_cat)
TukeyHSD(chloride_amb_fec_aov_cat)
# Normality test
shapiro.test(Amb_Fec_Samples$Cl...mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(Cl...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# not normal
# Nonparametric variance test:
# Levene's test requires a categorical variable
#LeveneTest(Cl...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# K+
# Summary stats
# Amb Fec data (with atresia IDs)
Amb_Fec_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarize(count = n(),
median = round(median(K...mmol.L.), 3),
mean = round(mean(K...mmol.L.), 3),
sd = round(sd(K...mmol.L.), 3),
cv = round(sd(K...mmol.L.)/mean(K...mmol.L.), 3)) %>%
ungroup()
# Amb Fec No Atresia data
Amb_Fec_No_Atresia_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarize(count = n(),
median = round(median(K...mmol.L.), 3),
mean = round(mean(K...mmol.L.), 3),
sd = round(sd(K...mmol.L.), 3),
cv = round(sd(K...mmol.L.)/mean(K...mmol.L.), 3)) %>%
ungroup()
# K+
# Weight adjusted scatterplot
# Amb Fec only scatterplot: atresia ids removed
potassium_amb_fec_no_atresia_weight_adj_scatterplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_point(aes(x = K...mmol.L., y = Weight_Adjusted_Fecundity_Fecundity.Mean_Weight), colour = "black") +
labs(title = "Potassium", x = "Potassium (mmol/L)", y = "Weight Adjusted Fecundity") +
scale_y_continuous() +
theme_classic() +
facet_wrap(~ Ambient.Or.OAH) +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 25, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(potassium_amb_fec_no_atresia_weight_adj_scatterplot)
ggsave(filename = "data-images/potassium_amb_fec_no_atresia_weight_adj_scatterplot.pdf", plot = potassium_amb_fec_no_atresia_weight_adj_scatterplot, device = "pdf")
ggsave(filename = "data-images/potassium_amb_fec_no_atresia_weight_adj_scatterplot.png", plot = potassium_amb_fec_no_atresia_weight_adj_scatterplot, device = "png")
# Cl- boxplot
# Amb_Fec Samples No Atresia Ids
potassium_amb_fec_no_atresia_boxplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = K...mmol.L.), outlier.shape = NA) +
# geom_point(aes(x = Fecundity_Class, y = K...mmol.L.), alpha = 0.5, colour = "black") +
geom_jitter(aes(x = Fecundity_Class, y = K...mmol.L.), alpha = 0.5, colour = "black", width = 0.03, height = 0.03) +
labs(title = "Potassium", x = "Fecundity Class", y = "Potassium (mmol/L)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(potassium_amb_fec_no_atresia_boxplot)
ggsave(filename = "data-images/potassium_amb_fec_no_atresia_boxplot.pdf", plot = potassium_amb_fec_no_atresia_boxplot, device = "pdf")
ggsave(filename = "data-images/potassium_amb_fec_no_atresia_boxplot.png", plot = potassium_amb_fec_no_atresia_boxplot, device = "png")
# K+ boxplot
# Amb_Fec Samples with Atresia Ids
potassium_amb_fec_boxplot <- ggplot(data = Amb_Fec_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = K...mmol.L.), outlier.shape = NA) +
#  geom_point(aes(x = Fecundity_Class, y = K...mmol.L.), alpha = 0.5, colour = "black") +
geom_jitter(aes(x = Fecundity_Class, y = K...mmol.L.), alpha = 0.5, colour = "black", width = 0.03, height = 0.03) +
labs(title = "Potassium", x = "Fecundity Class", y = "Potassium (mmol/L)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(potassium_amb_fec_boxplot)
ggsave(filename = "data-images/potassium_amb_fec_boxplot.pdf", plot = potassium_amb_fec_boxplot, device = "pdf")
ggsave(filename = "data-images/potassium_amb_fec_boxplot.png", plot = potassium_amb_fec_boxplot, device = "png")
# K+
# Parametric Assumptions
# Data Distribution
# Amb Fec Samples
# Frequency Histograms
hist(Amb_Fec_Samples$K...mmol.L.)
plotNormalHistogram(Amb_Fec_Samples$K...mmol.L.)
# Density plot
Amb_Fec_Samples %>%
ggplot(aes(x = K...mmol.L.)) +
stat_function(fun = dnorm, args = c(mean = mean(Amb_Fec_Samples$K...mmol.L.), sd = sd(Amb_Fec_Samples$K...mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Potassium Weight Adj Fecundity Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Density by brood condition
Amb_Fec_Samples %>%
ggplot(aes(x = K...mmol.L.)) +
geom_density(aes(x = K...mmol.L., fill = Fecundity_Class), alpha = 0.5)
ggplot(Amb_Fec_Samples, aes(x = K...mmol.L.)) +
geom_density(aes(x = K...mmol.L.)) +
facet_wrap(Fecundity_Class ~ Ambient.Or.OAH)
plotNormalDensity(Amb_Fec_Samples$K...mmol.L.)
# K+
# Amb Fec No Atresia Samples
# Frequency Histograms
hist(Amb_Fec_No_Atresia_Samples$K...mmol.L.)
plotNormalHistogram(Amb_Fec_No_Atresia_Samples$K...mmol.L.)
# Density plot
Amb_Fec_No_Atresia_Samples %>%
ggplot(aes(x = K...mmol.L.)) +
stat_function(fun = dnorm, args = c(mean = mean(Amb_Fec_No_Atresia_Samples$K...mmol.L.), sd = sd(Amb_Fec_No_Atresia_Samples$K...mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Potassium Weight Adj Fecundity Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Density by brood condition
Amb_Fec_No_Atresia_Samples %>%
ggplot(aes(x = K...mmol.L.)) +
geom_density(aes(x = K...mmol.L., fill = Fecundity_Class), alpha = 0.5)
ggplot(Amb_Fec_No_Atresia_Samples, aes(x = K...mmol.L.)) +
geom_density(aes(x = K...mmol.L.)) +
facet_wrap(Fecundity_Class ~ Ambient.Or.OAH)
plotNormalDensity(Amb_Fec_No_Atresia_Samples$K...mmol.L.)
# K+
# Amb Fec No Atresia regression model
potassium_amb_fec_no_atresia_lm <- lm(K...mmol.L. ~ All_Fecundity, data = Amb_Fec_No_Atresia_Samples)
potassium_amb_fec_no_atresia_lm_res <- residuals(potassium_amb_fec_no_atresia_lm)
# p-value significant if (a < 0.1 or a < 0.05)
summary(potassium_amb_fec_no_atresia_lm)
potassium_amb_fec_no_atresia_lm_res_plot <- simulateResiduals(fittedModel = potassium_amb_fec_no_atresia_lm)
plot(potassium_amb_fec_no_atresia_lm_res_plot)
# Normality test
shapiro.test(potassium_amb_fec_no_atresia_lm_res)
# scedasticity test requires a categorical variable
# K+
# Amb Fec No Atresia Class regression model
potassium_amb_fec_no_atresia_aov_cat <- aov(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
summary(potassium_amb_fec_no_atresia_aov_cat)
TukeyHSD(potassium_amb_fec_no_atresia_aov_cat)
# Normality Test
shapiro.test(Amb_Fec_No_Atresia_Samples$K...mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
# Nonparametric variance test:
# Levene's test requires a categorical variable
#LeveneTest(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
# K+
# Amb Fec Class regression model
potassium_amb_fec_aov_cat <- aov(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
summary(potassium_amb_fec_aov_cat)
TukeyHSD(potassium_amb_fec_aov_cat)
# Normality test
shapiro.test(Amb_Fec_Samples$K...mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# not normal
# Nonparametric variance test:
# Levene's test requires a categorical variable
LeveneTest(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# Non-parametric stat test
kruskal.test(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
DunnTest(K...mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# Ca+2
# Summary stats
# Amb Fec data (with atresia IDs)
Amb_Fec_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarize(count = n(),
median = round(median(Ca....mmol.L.), 3),
mean = round(mean(Ca....mmol.L.), 3),
sd = round(sd(Ca....mmol.L.), 3),
cv = round(sd(Ca....mmol.L.)/mean(Ca....mmol.L.), 3)) %>%
ungroup()
# Amb Fec No Atresia data
Amb_Fec_No_Atresia_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarize(count = n(),
median = round(median(Ca....mmol.L.), 3),
mean = round(mean(Ca....mmol.L.), 3),
sd = round(sd(Ca....mmol.L.), 3),
cv = round(sd(Ca....mmol.L.)/mean(Ca....mmol.L.), 3)) %>%
ungroup()
# Ca+2
# Weight adjusted scatterplot
# Amb Fec only scatterplot: atresia ids removed
calcium_amb_fec_no_atresia_weight_adj_scatterplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_point(aes(x = Ca....mmol.L., y = Weight_Adjusted_Fecundity_Fecundity.Mean_Weight), colour = "black") +
labs(title = "Calcium", x = "Calcium (mmol/L)", y = "Weight Adjusted Fecundity") +
scale_y_continuous() +
theme_classic() +
facet_wrap(~ Ambient.Or.OAH) +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 25, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(calcium_amb_fec_no_atresia_weight_adj_scatterplot)
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_weight_adj_scatterplot.pdf", plot = calcium_amb_fec_no_atresia_weight_adj_scatterplot, device = "pdf")
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_weight_adj_scatterplot.png", plot = calcium_amb_fec_no_atresia_weight_adj_scatterplot, device = "png")
# Ca+2
# Weight adjusted scatterplot
# Amb Fec only scatterplot: atresia ids removed
calcium_amb_fec_no_atresia_weight_adj_scatterplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_point(aes(x = Ca....mmol.L., y = Weight_Adjusted_Fecundity_Fecundity.Mean_Weight), colour = "black") +
labs(title = "Calcium", x = "Calcium (mmol/L)", y = "Weight Adjusted Fecundity") +
scale_y_continuous() +
theme_classic() +
facet_wrap(~ Ambient.Or.OAH) +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 25, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(calcium_amb_fec_no_atresia_weight_adj_scatterplot)
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_weight_adj_scatterplot.pdf", plot = calcium_amb_fec_no_atresia_weight_adj_scatterplot, device = "pdf")
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_weight_adj_scatterplot.png", plot = calcium_amb_fec_no_atresia_weight_adj_scatterplot, device = "png")
# Ca boxplot
# Amb_Fec Samples No Atresia Ids
calcium_amb_fec_no_atresia_boxplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = Ca....mmol.L.)) +
geom_point(aes(x = Fecundity_Class, y = Ca....mmol.L.), alpha = 0.5, colour = "black") +
labs(title = "Calcium", x = "Fecundity Class", y = "Calcium (mmol/L)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(calcium_amb_fec_no_atresia_boxplot)
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_boxplot.pdf", plot = calcium_amb_fec_no_atresia_boxplot, device = "pdf")
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_boxplot.png", plot = calcium_amb_fec_no_atresia_boxplot, device = "png")
# Ca boxplot
# Amb_Fec Samples No Atresia Ids
calcium_amb_fec_no_atresia_boxplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = Ca....mmol.L.)) +
geom_point(aes(x = Fecundity_Class, y = Ca....mmol.L.), alpha = 0.5, colour = "black") +
labs(title = "Calcium", x = "Fecundity Class", y = "Calcium (mmol/L)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(calcium_amb_fec_no_atresia_boxplot)
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_boxplot.pdf", plot = calcium_amb_fec_no_atresia_boxplot, device = "pdf")
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_boxplot.png", plot = calcium_amb_fec_no_atresia_boxplot, device = "png")
# Ca boxplot
# Amb_Fec Samples No Atresia Ids
calcium_amb_fec_no_atresia_boxplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = Ca....mmol.L.)) +
geom_point(aes(x = Fecundity_Class, y = Ca....mmol.L.), alpha = 0.5, colour = "black") +
labs(title = "Calcium", x = "Fecundity Class", y = "Calcium (mmol/L)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(calcium_amb_fec_no_atresia_boxplot)
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_boxplot.pdf", plot = calcium_amb_fec_no_atresia_boxplot, device = "pdf")
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_boxplot.png", plot = calcium_amb_fec_no_atresia_boxplot, device = "png")
# Ca+2 boxplot
# Amb_Fec Samples with Atresia Ids
calcium_amb_fec_boxplot <- ggplot(data = Amb_Fec_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = Ca....mmol.L.)) +
geom_point(aes(x = Fecundity_Class, y = Ca....mmol.L.), alpha = 0.5, colour = "black") +
labs(title = "Calcium", x = "Fecundity Class", y = "Calcium (mmol/L)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(calcium_amb_fec_boxplot)
ggsave(filename = "data-images/calcium_amb_fec_boxplot.pdf", plot = calcium_amb_fec_boxplot, device = "pdf")
ggsave(filename = "data-images/calcium_amb_fec_boxplot.png", plot = calcium_amb_fec_boxplot, device = "png")
# Ca+2
# Parametric Assumptions
# Data Distribution
# Amb Fec Samples
# Frequency Histograms
hist(Amb_Fec_Samples$Ca....mmol.L.)
plotNormalHistogram(Amb_Fec_Samples$Ca....mmol.L.)
# Density plot
Amb_Fec_Samples %>%
ggplot(aes(x = Ca....mmol.L.)) +
stat_function(fun = dnorm, args = c(mean = mean(Amb_Fec_Samples$Ca....mmol.L.), sd = sd(Amb_Fec_Samples$Ca....mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Calcium Weight Adj Fecundity Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Density by brood condition
Amb_Fec_Samples %>%
ggplot(aes(x = Ca....mmol.L.)) +
geom_density(aes(x = Ca....mmol.L., fill = Fecundity_Class), alpha = 0.5)
ggplot(Amb_Fec_Samples, aes(x = Ca....mmol.L.)) +
geom_density(aes(x = Ca....mmol.L.)) +
facet_wrap(Fecundity_Class ~ Ambient.Or.OAH)
plotNormalDensity(Amb_Fec_Samples$Ca....mmol.L.)
# Ca+2
# Amb Fec No Atresia Samples
# Frequency Histograms
hist(Amb_Fec_No_Atresia_Samples$Ca....mmol.L.)
plotNormalHistogram(Amb_Fec_No_Atresia_Samples$Ca....mmol.L.)
# Density plot
Amb_Fec_No_Atresia_Samples %>%
ggplot(aes(x = Ca....mmol.L.)) +
stat_function(fun = dnorm, args = c(mean = mean(Amb_Fec_No_Atresia_Samples$Ca....mmol.L.), sd = sd(Amb_Fec_No_Atresia_Samples$Ca....mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Calcium Weight Adj Fecundity Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Density by brood condition
Amb_Fec_No_Atresia_Samples %>%
ggplot(aes(x = Ca....mmol.L.)) +
geom_density(aes(x = Ca....mmol.L., fill = Fecundity_Class), alpha = 0.5)
ggplot(Amb_Fec_No_Atresia_Samples, aes(x = Ca....mmol.L.)) +
geom_density(aes(x = Ca....mmol.L.)) +
facet_wrap(Fecundity_Class ~ Ambient.Or.OAH)
plotNormalDensity(Amb_Fec_No_Atresia_Samples$Ca....mmol.L.)
# Ca+2
# Amb Fec No Atresia regression model
calcium_amb_fec_no_atresia_lm <- lm(Ca....mmol.L. ~ All_Fecundity, data = Amb_Fec_No_Atresia_Samples)
calcium_amb_fec_no_atresia_lm_res <- residuals(calcium_amb_fec_no_atresia_lm)
# p-value significant if (a < 0.1 or a < 0.05)
summary(calcium_amb_fec_no_atresia_lm)
calcium_amb_fec_no_atresia_lm_res_plot <- simulateResiduals(fittedModel = calcium_amb_fec_no_atresia_lm)
plot(calcium_amb_fec_no_atresia_lm_res_plot)
# Normality test
shapiro.test(calcium_amb_fec_no_atresia_lm_res)
# scedasticity test requires a categorical variable
# p-value significant if (a < 0.1 or a < 0.05)
summary(calcium_amb_fec_no_atresia_lm)
# Normality test
shapiro.test(calcium_amb_fec_no_atresia_lm_res)
# Ca+2
# ggplot with geom_smooth(aes(x=,y=)), method = "lm")
# Amb Fec only scatterplot: atresia ids removed
calcium_amb_fec_no_atresia_weight_adj_lm_scatterplot <- ggplot(data = Amb_Fec_No_Atresia_Samples) +
geom_point(aes(x = Ca....mmol.L., y = Weight_Adjusted_Fecundity_Fecundity.Mean_Weight), colour = "black") +
geom_smooth(aes(x = Ca....mmol.L., y = Weight_Adjusted_Fecundity_Fecundity.Mean_Weight), method = "lm") +
labs(title = "Calcium", x = "Calcium (mmol/L)", y = "Weight Adjusted Fecundity") +
scale_y_continuous() +
theme_classic() +
facet_wrap(~ Ambient.Or.OAH) +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 25, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(calcium_amb_fec_no_atresia_weight_adj_lm_scatterplot)
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_weight_adj_lm_scatterplot.pdf", plot = calcium_amb_fec_no_atresia_weight_adj_lm_scatterplot, device = "pdf")
ggsave(filename = "data-images/calcium_amb_fec_no_atresia_weight_adj_lm_scatterplot.png", plot = calcium_amb_fec_no_atresia_weight_adj_lm_scatterplot, device = "png")
# Ca+2
# Amb Fec No Atresia Class regression model
calcium_amb_fec_no_atresia_aov_cat <- aov(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
summary(calcium_amb_fec_no_atresia_aov_cat)
TukeyHSD(calcium_amb_fec_no_atresia_aov_cat)
# Normality Test
shapiro.test(Amb_Fec_No_Atresia_Samples$Ca....mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
# Nonparametric variance test:
# Levene's test requires a categorical variable
#LeveneTest(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
calcium_amb_fec_no_atresia_aov_cat <- aov(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
summary(calcium_amb_fec_no_atresia_aov_cat)
# Normality Test
shapiro.test(Amb_Fec_No_Atresia_Samples$Ca....mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_No_Atresia_Samples)
# Ca+2
# Amb Fec Class regression model
calcium_amb_fec_aov_cat <- aov(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
summary(calcium_amb_fec_aov_cat)
TukeyHSD(calcium_amb_fec_aov_cat)
# Normality test
shapiro.test(Amb_Fec_Samples$Ca....mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# not normal
# Nonparametric variance test:
# Levene's test requires a categorical variable
LeveneTest(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# Non-parametric stat test
kruskal.test(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
DunnTest(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
calcium_amb_fec_aov_cat <- aov(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
summary(calcium_amb_fec_aov_cat)
TukeyHSD(calcium_amb_fec_aov_cat)
# Normality test
shapiro.test(Amb_Fec_Samples$Ca....mmol.L.)
# Normality test
shapiro.test(Amb_Fec_Samples$Ca....mmol.L.)
# Parametric variance test:
# Bartlett's test requires a categorical variable
bartlett.test(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# Nonparametric variance test:
# Levene's test requires a categorical variable
LeveneTest(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
# Non-parametric stat test
kruskal.test(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
DunnTest(Ca....mmol.L. ~ Fecundity_Class, data = Amb_Fec_Samples)
