#          residual_sqrt = sqrt(abs(rstandard(hct_lm_ambient)))) %>%
#   ggplot(aes(as.numeric(as.factor(Pregnant.Or.Atresia)), residual_sqrt)) +
#   geom_point() +
#   stat_summary(geom = "line", fun = mean, color = "red")
# Using ambient fecundity interaction and additive linear model
# Note both models show same results
Ambient_Only_Samples %>%
mutate(predicted_values = fitted(lm_ambient_fecund_int),
residual_sqrt = sqrt(abs(rstandard(lm_ambient_fecund_int)))) %>%
ggplot(aes(predicted_values, residual_sqrt)) +
geom_point() +
geom_smooth()
Ambient_Only_Samples %>%
mutate(predicted_values = fitted(lm_ambient_fecund_add),
residual_sqrt = sqrt(abs(rstandard(lm_ambient_fecund_add)))) %>%
ggplot(aes(predicted_values, residual_sqrt)) +
geom_point() +
geom_smooth()
# Compare residuals independently
# parturition success
Ambient_Only_Samples %>%
mutate(predicted_values = fitted(lm_ambient_fecund_int),
residual_sqrt = sqrt(abs(rstandard(lm_ambient_fecund_add)))) %>%
ggplot(aes(Pregnant.Or.Atresia, residual_sqrt)) +
geom_point() +
stat_summary(geom = "line", fun = mean, color = "red")
Ambient_Only_Samples %>%
mutate(predicted_values = fitted(lm_ambient_fecund_int),
residual_sqrt = sqrt(abs(rstandard(lm_ambient_fecund_int)))) %>%
ggplot(aes(as.numeric(as.factor(Pregnant.Or.Atresia)), residual_sqrt)) +
geom_point() +
stat_summary(geom = "line", fun = mean, color = "red")
# hct
# Parametric Assumptions
# Assessing Homoscedasticity: Equal Variance of Residuals
# Testing scedasticity: Options listed below
# - F-test = var.test(): For normally distributed data with two groups only)
# - Bartlett's test = bartlett.test(): For normally distributed data with multiple groups. Sensitive to normality)
# - Levene's Test = leveneTest(): Similar to Bartlett's test, but more robust to variance, less sensitive to normality)
# - Fligner-Killeen test = fligner.test(): A nonparametric test, made to be even more robust against non-normal distributed data
# - Brown-Forsythe Test =
# - Breusch Pagan test = library(lmtest) + bptest(): test for scedasticity in linear regression models
# Bartlett's test
# Note Error Code: Requires at least 2 obs per group
# General samples
bartlett.test(Hct.... ~ Ambient.Or.OAH, General_Samples)
bartlett.test(Hct.... ~ Pregnant.Or.Atresia, General_Samples)
leveneTest(Hct.... ~ Ambient.Or.OAH, General_Samples)
leveneTest(Hct.... ~ Pregnant.Or.Atresia, General_Samples)
# Ambient samples
#bartlett.test(Hct.... ~ Consensus_Brood_Condition, Ambient_Only_Samples)
leveneTest(Hct.... ~ Consensus_Brood_Condition, Ambient_Only_Samples)
# hct Analysis
# ANOVA Tests
# Testing general factor differences: Treatment & Parturition Outcome
# Two-Way ANOVA
hct_aov_int <- aov(Hct.... ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples)
summary(hct_aov_int)
# If Interaction not significant (p-value > 0.05), use additive model
hct_aov_additive <- aov(Hct.... ~ Pregnant.Or.Atresia + Ambient.Or.OAH, data = General_Samples)
summary(hct_aov_additive)
# Post-Hoc Test:
# - Tukey's HSD test (parametric)
# - Scheirer-Ray-Hare test (non-parametric)
# - Aligned Ranked Transformation (ART): Nonparametric, robust against violations to normality and homoscedasticity
# - Ordinal Logistic Regression
# Tukey's Honestly Significant Difference Test (Parametric):
hct_tukey_test <- TukeyHSD(hct_aov_int)
print(hct_tukey_test)
hct_aov_int %>% tukey_hsd()
# hct
# ANOVA Tests
# Testing for differences in ambient parturition success metrics
# One-way ANOVA (parametric) or Kruskall-Wallis test (nonparametric)
hct_aov_ambient <- aov(Hct.... ~ Consensus_Brood_Condition, data = Ambient_Only_Samples)
summary(hct_aov_ambient)
# Post-Hoc Test:
# - Tukey's HSD (parametric, normality & equal variance across groups)
# - Kruskall Wallis (nonparametric option)
# - Dunn's test (non-parametric, if Kruskall-Wallis test is rejected)
# glucose
# Summary stats
# General data
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Glu..mmol.L.), 3),
mean = round(mean(Glu..mmol.L.), 3),
sd = round(sd(Glu..mmol.L.), 3),
cv = round(sd(Glu..mmol.L.)/mean(Glu..mmol.L.), 3)) %>%
ungroup()
# Ambient data
Ambient_Only_Samples %>%
group_by(Ambient.Or.OAH, Consensus_Brood_Condition) %>%
summarize(count = n(),
median = round(median(Glu..mmol.L.), 3),
mean = round(mean(Glu..mmol.L.), 3),
sd = round(sd(Glu..mmol.L.), 3),
cv = round(sd(Glu..mmol.L.)/mean(Glu..mmol.L.), 3)) %>%
ungroup()
# Glucose boxplot: General samples
glu_general_boxplot <- ggplot(data = General_Samples, aes(x = Pregnant.Or.Atresia, y = Glu..mmol.L., fill = Ambient.Or.OAH)) +
geom_boxplot(aes(x = Pregnant.Or.Atresia, y = Glu..mmol.L., fill = Ambient.Or.OAH)) +
geom_point(aes(color = Ambient.Or.OAH), position = position_dodge(width = 0.75), alpha = 0.3, color = "black") +
labs(title = "Glucose", x = "Parturition Type", y = "Glucose (mmol/L)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
scale_fill_manual(values = c("Ambient" = "#189bff", "OAH" = "#598c78")) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(glu_general_boxplot)
ggsave(filename = "data-images/glu_general_boxplot.pdf", plot = glu_general_boxplot, device = "pdf")
ggsave(filename = "data-images/glu_general_boxplot.png", plot = glu_general_boxplot, device = "png")
# Glucose boxplot: Ambient Samples
glu_ambient_boxplot <- ggplot(data = Ambient_Only_Samples) +
geom_boxplot(aes(x = Consensus_Brood_Condition, y = Glu..mmol.L.)) +
geom_point(aes(x = Consensus_Brood_Condition, y = Glu..mmol.L.), alpha = 0.5, colour = "black") +
labs(title = "Glucose", x = "Parturition Success", y = "Glucose (mmol/L)") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(glu_ambient_boxplot)
ggsave(filename = "data-images/glu_ambient_boxplot.pdf", plot = glu_ambient_boxplot, device = "pdf")
ggsave(filename = "data-images/glu_ambient_boxplot.png", plot = glu_ambient_boxplot, device = "png")
# Glucose
# Parametric Assumptions
# Data Distribution
# Frequency Histograms
hist(General_Samples$Glu..mmol.L.)
hist(Ambient_Only_Samples$Glu..mmol.L.)
# Density Histogram
# Density vs normality curve histograms
# Notes: Maybe set geom_density(alpha = 0.5)?
General_Samples %>%
ggplot(aes(x = Glu..mmol.L.)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = dnorm, args = c(mean = mean(General_Samples$Glu..mmol.L.), sd = sd(General_Samples$Glu..mmol.L.)), col = "green") +
geom_density(col = "black") +
labs(title = "Glucose General Sample Distribution")
# With legend label
General_Samples %>%
ggplot(aes(x = Glu..mmol.L.)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = dnorm, args = c(mean = mean(General_Samples$Glu..mmol.L.), sd = sd(General_Samples$Glu..mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Glucose General Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
Ambient_Only_Samples %>%
ggplot(aes(x = Glu..mmol.L.)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Only_Samples$Glu..mmol.L.), sd = sd(Ambient_Only_Samples$Glu..mmol.L.)), col = "green") +
geom_density(col = "black") +
facet_grid(~ Ambient.Or.OAH) +
labs (title = "Glucose Ambient Sample Distribution")
# With legend label
Ambient_Only_Samples %>%
ggplot(aes(x = Glu..mmol.L.)) +
geom_histogram(binwidth = 0.01) +
stat_function(fun = dnorm, args = c(mean = mean(Ambient_Only_Samples$Glu..mmol.L.), sd = sd(Ambient_Only_Samples$Glu..mmol.L.)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "Glucose Ambient Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Glucose
# Parametric Assumptions:
# Assessing Normality
# Normality Plots
# Note: If data is non-normal considering applying transformation
# lm model of general data
glu_lm_int <- lm(Glu..mmol.L. ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples)
# View all residual plots
#plot(glu_lm_int)
glu_res_int_qqplot <- ggqqplot(residuals(glu_lm_int)) +
labs(title = "Glucose Interactive Residual QQplot",
subtitle = "lm(Glu..mmol.L. ~ Parturition Outcome * Treatment)",
x = "Glucose Theoretical Quantiles (Predicted values)",
y = "Glucose Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(glu_res_int_qqplot)
# Glucose
# Parametric Assumptions
# Assessing Normality
# Normality Plots
# lm model of ambient data
glu_lm_ambient <- lm(Glu..mmol.L. ~ Consensus_Brood_Condition, data = Ambient_Only_Samples)
# View all residual plots
#plot(glu_lm_ambient)
glu_res_ambient_qqplot <- ggqqplot(residuals(glu_lm_ambient)) +
labs(title = "Glucose Parturition Success Residual QQplot",
subtitle = "lm(Glucose ~ Consensus_Brood_Condition)",
x = "Glucose Theoretical Quantiles (Predicted values)",
y = "Glucose Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
print(glu_res_ambient_qqplot)
General_Samples %>% shapiro_test(Glu..mmol.L.)
General_Samples %>%
group_by(Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
shapiro_test(Glu..mmol.L.)
# Shapito.test for Ambient Samples
Ambient_Only_Samples %>% shapiro_test(Glu..mmol.L.)
Ambient_Only_Samples %>%
#   group_by(Consensus_Brood_Condition) %>%
#   shapiro_test(Glu..mmol.L.)
Ambient_Only_Samples %>%
group_by(Consensus_Brood_Condition) %>%
shapiro_test(Glu..mmol.L.)
# Glucose
# Parametric Assumptions
# Assessing Homoscedasticity: Equal Variance of Residuals
# Plotting residuals vs fitted
# Two-way ANOVA Interactive/Additive model: General factor comparison
lm(Glu..mmol.L. ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples) %>% plot()
# One-Way ANOVA model: Ambient Parturition Success comparison
lm(Glu..mmol.L. ~ Consensus_Brood_Condition, data = Ambient_Only_Samples) %>%
plot()
# Glucose
# Scale location plot
# A flat line stat model is evidence of homoscedasticity, gentle or slight curves are generally accepted as equal variance across samples, however any large, drastic, or sharp changing features to the line suggest heteroscedasticity.
# The degree of slope of the stat model line to which we distinguish between equal or unequal variance across samples is unclear as of yet.
# Scale location plots
# General Samples
General_Samples %>%
mutate(predicted_values = fitted(glu_lm_int),
residual_sqrt = sqrt(abs(rstandard(glu_lm_int)))) %>%
ggplot(aes(predicted_values, residual_sqrt)) +
geom_point() +
geom_smooth()
# Compare residuals independently
# General treatment
General_Samples %>%
mutate(predicted_values = fitted(glu_lm_int),
residual_sqrt = sqrt(abs(rstandard(glu_lm_int)))) %>%
ggplot(aes(Ambient.Or.OAH, residual_sqrt)) +
geom_point() +
stat_summary(geom = "line", fun = mean, color = "red")
General_Samples %>%
mutate(predicted_values = fitted(glu_lm_int),
residual_sqrt = sqrt(abs(rstandard(glu_lm_int)))) %>%
ggplot(aes(as.numeric(as.factor(Ambient.Or.OAH)), residual_sqrt)) +
geom_point() +
stat_summary(geom = "line", fun = mean, color = "red")
# General parturition outcome
General_Samples %>%
mutate(predicted_values = fitted(glu_lm_int),
residual_sqrt = sqrt(abs(rstandard(glu_lm_int)))) %>%
ggplot(aes(Pregnant.Or.Atresia, residual_sqrt)) +
geom_point() +
stat_summary(geom = "line", fun = mean, color = "red")
General_Samples %>%
mutate(predicted_values = fitted(glu_lm_int),
residual_sqrt = sqrt(abs(rstandard(glu_lm_int)))) %>%
ggplot(aes(as.numeric(as.factor(Pregnant.Or.Atresia)), residual_sqrt)) +
geom_point() +
stat_summary(geom = "line", fun = mean, color = "red")
# Glucose
# Parametric Assumptions
# Assessing Homoscedasticity: Equal Variance of Residuals
# Testing scedasticity: Options listed below
# - F-test = var.test(): For normally distributed data with two groups only)
# - Bartlett's test = bartlett.test(): For normally distributed data with multiple groups. Sensitive to normality)
# - Levene's Test = leveneTest(): Similar to Bartlett's test, but more robust to variance, less sensitive to normality)
# - Fligner-Killeen test = fligner.test(): A nonparametric test, made to be even more robust against non-normal distributed data
# - Breusch Pagan test = library(lmtest) + bptest(): test for scedasticity in linear regression models
# Bartlett's test
# Note Error Code: Requires at least 2 obs per group
# General samples
bartlett.test(Glu..mmol.L. ~ Ambient.Or.OAH, General_Samples)
bartlett.test(Glu..mmol.L. ~ Pregnant.Or.Atresia, General_Samples)
leveneTest(Glu..mmol.L. ~ Ambient.Or.OAH, General_Samples)
leveneTest(Glu..mmol.L. ~ Pregnant.Or.Atresia, General_Samples)
# Ambient samples
#bartlett.test(Glu..mmol.L. ~ Consensus_Brood_Condition, Ambient_Only_Samples)
leveneTest(Glu..mmol.L. ~ Consensus_Brood_Condition, Ambient_Only_Samples)
# Glucose
# ANOVA Tests
# Testing for differences in ambient parturition success metrics
# One-way ANOVA (parametric) or Kruskall-Wallis test (nonparametric)
glu_aov_ambient <- aov(Glu..mmol.L. ~ Consensus_Brood_Condition, data = Ambient_Only_Samples)
summary(glu_aov_ambient)
# Post-Hoc Test:
# - Tukey's HSD (parametric, normality & equal variance across groups)
# - Kruskall Wallis (nonparametric option)
# - Dunn's test (non-parametric, if Kruskall-Wallis test is rejected)
?stat.desc
# General samples
stat.desc(pH_lm_int, norm = TRUE)
# General samples
lm(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples) %>% stat.desc(norm = TRUE)
# General samples
aov(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples) %>% stat.desc(norm = TRUE)
# General samples
aov(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples) %>% stat.desc()
stat.desc(norm = TRUE) %>%
aov(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples)
stat.desc(x, norm = TRUE) %>%
aov(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples)
stat.desc(norm = TRUE, desc = true, p = 0.95) %>%
aov(pH ~ Pregnant.Or.Atresia * Ambient.Or.OAH, data = General_Samples)
stat.desc(norm = TRUE, desc = true, p = 0.95) %>%
aov(pH ~ Pregnant.Or.Atresia, Ambient.Or.OAH, data = General_Samples)
stat.desc(pH_aov_additive, norm = TRUE, desc = true, p = 0.95)
stat.desc(pH_aov_additive, norm = TRUE, desc = true, p = 0.95)
stat.desc(pH_aov_additive, norm = TRUE, desc = TRUE, p = 0.95)
stat.desc(pH_lm_ambient, norm = TRUE, desc = TRUE, p = 0.95)
stat.desc(General_Samples[, c(pH, "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
stat.desc(General_Samples[, c("pH", "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
General_Samples %>%
stat.desc(norm = TRUE) %>%
select(pH, Ambient.Or.OAH, Pregnant.Or.Atresia)
General_Samples %>%
group_by(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
stat.desc(General_Samples[, c("pH", "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
stat.desc(General_Samples[, c("pH", "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
stat.desc(General_Samples$pH norm = TRUE)
stat.desc(General_Samples$pH norm = TRUE)
stat.desc(General_Samples$pH, norm = TRUE)
General_Samples %>%
group_by(Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(pH)
General_Samples %>%
group_by(Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(~ pH)
General_Samples %>%
group_by(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(~ pH)
General_Samples %>%
summarise(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc()
General_Samples %>%
summarise(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
stat.desc(General_Samples[, c("pH", "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
# pH
# Parametric Assumptions
# Assessing Normality
# Descriptive stat test: Stat.desc
# Z-score reflected in 'skew.2SE' and 'kurt.2SE'
# If these values are below 0.96 this indicates normality
# Note these values are sensitive to sample size, and are most effective for relatively small sample sizes approximately n = 30-50 range
# General samples
General_Samples %>%
summarise(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
# stat.desc(General_Samples[, c("pH", "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
stat.desc(General_Samples$pH, norm = TRUE)
# Ambient samples
stat.desc(General_Samples$pH, norm = TRUE)
stat.desc(General_Samples$pH, norm = TRUE)
# pH
# Parametric Assumptions
# Assessing Normality
# Descriptive stat test: Stat.desc
# Z-score reflected in 'skew.2SE' and 'kurt.2SE'
# If these values are below 0.96 this indicates normality
# Note these values are sensitive to sample size, and are most effective for relatively small sample sizes approximately n = 30-50 range
# General samples
General_Samples %>%
summarise(pH, Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
# stat.desc(General_Samples[, c("pH", "Pregnant.Or.Atresia", "Ambient.Or.OAH")], norm = TRUE, desc = TRUE, p = 0.95)
stat.desc(General_Samples$pH, norm = TRUE)
# Ambient samples
# Ambient samples
stat.desc(Ambient_Only_Samples$pH, norm = TRUE)
# Ambient samples
stat.desc(Ambient_Only_Samples$pH, norm = TRUE)
Ambient_Only_Samples %>%
summarise(pH, Brood_Condition) %>%
stat.desc(norm = TRUE)
stat.desc(Ambient_Only_Samples$pH, norm = TRUE)
Ambient_Only_Samples %>%
summarise(pH, Brood_Condition) %>%
stat.desc(norm = TRUE)
General_Samples %>%
summarise(Hct...., Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
stat.desc(norm = TRUE)
Ambient_Only_Samples %>%
summarise(Hct...., Brood_Condition) %>%
stat.desc(norm = TRUE)
# Na+
# Summary stats
# General data
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L.), 3),
mean = round(mean(Na...mmol.L.), 3),
sd = round(sd(Na...mmol.L.), 3),
cv = round(sd(Na...mmol.L.)/mean(Na...mmol.L.), 3)) %>%
ungroup()
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L.), 3),
mean = round(mean(Na...mmol.L.), 3),
sd = round(sd(Na...mmol.L.), 3),
cv = round(sd(Na...mmol.L.)/mean(Na...mmol.L.), 3)) %>%
ungroup()
# glucose
# Summary stats
# General data
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Glu..mmol.L.), 3),
mean = round(mean(Glu..mmol.L.), 3),
sd = round(sd(Glu..mmol.L.), 3),
cv = round(sd(Glu..mmol.L.)/mean(Glu..mmol.L.), 3)) %>%
ungroup()
# Ambient data
Ambient_Only_Samples %>%
group_by(Ambient.Or.OAH, Consensus_Brood_Condition) %>%
summarize(count = n(),
median = round(median(Glu..mmol.L.), 3),
mean = round(mean(Glu..mmol.L.), 3),
sd = round(sd(Glu..mmol.L.), 3),
cv = round(sd(Glu..mmol.L.)/mean(Glu..mmol.L.), 3)) %>%
ungroup()
# Na+
# Summary stats
# General data
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L.), 3),
mean = round(mean(Na...mmol.L.), 3),
sd = round(sd(Na...mmol.L.), 3),
cv = round(sd(Na...mmol.L.)/mean(Na...mmol.L.), 3)) %>%
ungroup()
Ambient_Only_Samples %>%
group_by(Ambient.Or.OAH, Consensus_Brood_Condition) %>%
summarize(count = n(),
median = round(median(Na...mmol.L.), 3),
mean = round(mean(Na...mmol.L.), 3),
sd = round(sd(Na...mmol.L.), 3),
cv = round(sd(Na...mmol.L.)/mean(Na...mmol.L.), 3)) %>%
ungroup()
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L.), 3),
mean = round(mean(Na...mmol.L.), 3),
sd = round(sd(Na...mmol.L.), 3),
cv = round(sd(Na...mmol.L.)/mean(Na...mmol.L.), 3))
# pH
# Summary stats
# General data
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(pH), 3),
mean = round(mean(pH), 3),
sd = round(sd(pH), 3),
cv = round(sd(pH)/mean(pH), 3)) %>%
ungroup()
# Ambient data
Ambient_Only_Samples %>%
group_by(Ambient.Or.OAH, Consensus_Brood_Condition) %>%
summarize(count = n(),
median = round(median(pH), 3),
mean = round(mean(pH), 3),
sd = round(sd(pH), 3),
cv = round(sd(pH)/mean(pH), 3)) %>%
ungroup()
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n()
# General data
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),)
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),)
# General data
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L.), 3),)
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L.), 3),)
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L., na.rm = FALSE), 3),)
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L., na.rm = TRUE), 3),)
General_Samples %>%
group_by(Pregnant.Or.Atresia, Ambient.Or.OAH) %>%
summarize(count = n(),
median = round(median(Na...mmol.L., na.rm = TRUE), 3),)
