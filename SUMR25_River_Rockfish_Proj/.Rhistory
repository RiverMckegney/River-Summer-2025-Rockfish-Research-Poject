# Fecundity categorical class lmer
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
# pH Fecundity data
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
# Fecundity Count Only data lmer (without atresia ids)
pH_fecundity_only_lmer <- lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1|), data = Fecundity_Samples)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
# Fecundity Count lmer: (with atresia ids)
pH_fecundity_count_lmer <- lmer(pH ~ Consensus_Fecundity + Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Fecundity_Count_Samples)
visualize(pH_fecundity_count_lmer, plot = "model", replace = TRUE)
# Fecundity categorical class lmer
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
pH_fecundity_count_lmer <- lmer(pH ~ Consensus_Fecundity + Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Fecundity_Count_Samples)
visualize(pH_fecundity_count_lmer, plot = "model", replace = TRUE)
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|), data = Fecundity_Samples)
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|), data = Fecundity_Samples)
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH, data = Fecundity_Samples)
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
pH_fecundity_only_lmer <- lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1 | ), data = Fecundity_Samples)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
pH_fecundity_only_lmer <- lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1 | Fecundity_Or_Brood_Count), data = Fecundity_Samples)
pH_fecundity_only_lmer <- lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1 | Ambient.Or.OAH), data = Fecundity_Samples)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE, sample = 50)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
visualize(pH_fecundity_only_lmer, plot = "model", sample = 50)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
pH_fecundity_count_lmer <- lmer(pH ~ Consensus_Fecundity + Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Fecundity_Count_Samples)
visualize(pH_fecundity_count_lmer, plot = "model", replace = TRUE)
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|Fecundity_Class), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
pH_fecundity_class_lmer <- lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|Fecundity_Class), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
pH_fecundity_class_lmer <- lmer(pH ~ Ambient.Or.OAH + Fecundity_Class + (1|Fecundity_Class), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
# Without atresia patients
summary(pH_fecundity_only_lmer)
# With atresia patients
summary(pH_fecundity_count_lmer)
pH_fecundity_class_res_lmer <- residuals(pH_fecundity_class_lmer)
pH_fecundity_class_res_lmer <- residuals(pH_fecundity_class_lmer)
# With Fecundity Class
summary(pH_fecundity_class_lmer)
pH_fecundity_only_res_lmer <- residuals(pH_fecundity_only_lmer)
pH_fecundity_count_res_lmer <- residuals(pH_fecundity_count_lmer)
pH_fecundity_class_res_lmer <- residuals(pH_fecundity_class_lmer)
# Shapiro test
shapiro.test(pH_ambient_lmer)
# Shapiro test
shapiro.test(pH_fecundity_only_lmer)
# pH Fecundity data
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
# Fecundity Count Only data lmer (without atresia ids)
pH_fecundity_only_lmer <- lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1 | Ambient.Or.OAH), data = Fecundity_Samples)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
# Fecundity Count lmer: (with atresia ids)
pH_fecundity_count_lmer <- lmer(pH ~ Consensus_Fecundity + Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Fecundity_Count_Samples)
visualize(pH_fecundity_count_lmer, plot = "model", replace = TRUE)
# Fecundity categorical class lmer
pH_fecundity_class_lmer <- lmer(pH ~ Ambient.Or.OAH + Fecundity_Class + (1|Fecundity_Class), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
# Shapiro test
shapiro.test(pH_fecundity_only_lmer)
shapiro.test(pH_fecundity_count_lmer)
shapiro.test(pH_fecundity_class_lmer)
# Shapiro test
shapiro.test(pH_fecundity_only_res_lmer)
shapiro.test(pH_fecundity_count_res_lmer)
shapiro.test(pH_fecundity_class_res_lmer)
pH_fecundity_only_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_only_lmer)
plot(pH_fecundity_only_simres_plot)
pH_fecundity_only_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_only_lmer)
plot(pH_fecundity_only_simres_plot)
pH_fecundity_count_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_count_lmer)
plot(pH_fecundity_count_simres_plot)
pH_fecundity_class_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_class_lmer)
plot(pH_fecundity_class_simres_plot)
# pH Fecundity data
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
# Fecundity Count Only data lmer (without atresia ids)
pH_fecundity_only_lmer <- lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1 | Ambient.Or.OAH), data = Fecundity_Samples)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
# Fecundity Count lmer: (with atresia ids)
pH_fecundity_count_lmer <- lmer(pH ~ Consensus_Fecundity + Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Fecundity_Count_Samples)
visualize(pH_fecundity_count_lmer, plot = "model", replace = TRUE)
# Fecundity categorical class lmer
pH_fecundity_class_lmer <- lmer(pH ~ Ambient.Or.OAH + Fecundity_Class + (1|Fecundity_Class), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
pH_fecundity_only_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_only_lmer)
plot(pH_fecundity_only_simres_plot)
pH_fecundity_only_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_only_lmer)
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
library(conover.test) # For the conover.Iman() test function
library(DescTools) # Contain alternative ConoverTest function
library(rstatix) # tidyverse adapted stat tests and mshapiro_test() functions
library(DHARMa) # For multi-level lm models and shapiro test
library(patchwork) # For combining ggplots
# Read and call data into df
# Primary samples df
ABL90 <- read.csv("Raw_Data/ABL90_Raw.csv")
# River's Parturition metadata
partuition_subcat <- read.csv("Raw_Data/River's_Rockfish_Metadata_Parturition_V7.csv")
# Data sifting: ABL90 dataset
# Step 1: Remove missing info
ABL_set1 <- ABL90 %>%
filter(Patient.ID_edited != "")
# Step 2: Separate Patient.ID into columns of sample types: blood plasma and instant freeze plasma
ABL_set2 <- separate(ABL_set1, 'Patient.ID_edited', into = c("Patient.ID_edited", "Sample_Type"), sep = ",")
# Step 3:
# Convert Patient.ID_edited column data to character type
ABL_set2$Patient.ID_edited <- as.character(ABL_set2$Patient.ID_edited)
# Step 4 & 5: Sussing out specific sample errors
# Remove insufficient samples
ABL_set3 <- ABL_set2 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Insufficient sample"))
# Remove inhomogeneous samples
ABL_set3 <- ABL_set3 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Inhomogeneous sample"))
# Step 6: Filter for only blood samples
ABL_b_samp <- ABL_set3 %>%
filter(Sample_Type == "b")
# Rename columns to match: Change 'ID' in parturition_subcat to 'Patient.ID_edited' so it is ready to join with ABL90 df
# Please note the 'Treatment' col in parturition_subcat does not match with the finalized 'Ambient.Or.OAH' col in metadata_atresia_guide or ABL90_merged df
# Rename 'ID' col to 'patient.ID_edited'
partuition_subcat <- partuition_subcat %>%
rename(Patient.ID_edited = ID)
# Connect main ABL90 dataset with my (River's) sub categorized parturition metadata
# ABL_merged <- partuition_subcat %>%
# left_join(ABL_b_samp, by = "Patient.ID_edited")
ABL_merged <- ABL_b_samp %>%
inner_join(partuition_subcat, by = "Patient.ID_edited")
# Rename Treatment & Parturition Outcome
ABL_merged <- ABL_merged %>%
rename(Ambient.Or.OAH = Consensus_General_Treatment,
Pregnant.Or.Atresia = Consensus_Atresia_Or_Pregnant)
# Cross Check all Columns: Cross validation to suss correct replicate row
check_params <- ABL_merged %>%
select(Patient.ID_edited, Time, Sample.., Measuring.Mode, Ambient.Or.OAH, Pregnant.Or.Atresia, pH, Glu..mmol.L., Hct...., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L., pCO2..mmHg.) %>%
filter(Patient.ID_edited == "9782D")
print(check_params)
check_params <- ABL_merged %>%
select(Patient.ID_edited, Time, Sample.., Measuring.Mode, Ambient.Or.OAH, Pregnant.Or.Atresia, pH, Glu..mmol.L., Hct...., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L., pCO2..mmHg.) %>%
filter(Patient.ID_edited == "9783D")
print(check_params)
# Removed replicates: 9782D (2x) and 9783D (2x)
ABL_merged <- ABL_merged %>%
filter(Sample.. != "863",
Sample.. != "934")
# New df with Moralities removed: Note none of these samples made it into ABL90 df anyway, so looks like they are already filtered out.
Live_Samples <- ABL_merged %>%
filter(Patient.ID_edited != "9780C", # Mortality
Patient.ID_edited != "777AE", # Mortality
Patient.ID_edited != "777CA") # Mortality after parturition
# New df with mortality and 'No info' Id's removed
Primary_Samples <- Live_Samples %>%
filter(Patient.ID_edited != "777A0", # No info
Patient.ID_edited != "9782F", # No info
Patient.ID_edited != "777B3", # No info
Patient.ID_edited != "777AA", # No info
Patient.ID_edited != "777DE", # No info
Patient.ID_edited != "777CE", # No info
Patient.ID_edited != "777A6") # No info
# New df of Only Ambient Treatment: For testing parturition success
Ambient_Samples <- Primary_Samples %>%
filter(Ambient.Or.OAH == "Ambient")
# New df of Fecundity Samples: For Background Correlative Evidence To Compare with Brood Condition Categorization
Fecundity_Samples <- Primary_Samples %>%
filter(Fecundity_Or_Brood_Count != "NA",
Fecundity_Class != "NA") # removes 97706
# Fecundity samples used for deciphering correlations with continuous brood count data
Fecundity_Count_Samples <- Primary_Samples %>%
filter(Consensus_Fecundity != "NA") # removes 97706
# Change Continuous Data to type to numeric, double, or factor
# Change data type of ions to factor or numeric
#glimpse(General_Samples)
#glimpse(Ambient_Samples)
General_Samples <- Primary_Samples %>%
mutate(across(c(pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Ambient_Samples <- Ambient_Samples %>%
mutate(across(c(pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Fecundity_Samples <- Fecundity_Samples %>%
mutate(across(c(Fecundity_Or_Brood_Count, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Fecundity_Count_Samples <- Fecundity_Samples %>%
mutate(across(c(Fecundity_Or_Brood_Count, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
# glimpse(Primary_Samples)
# glimpse(Ambient_Samples)
# glimpse(Fecundity_Samples)
# Fecundity data
#unique(Fecundity_Samples$Fecundity_Class)
# Arrange the order of parturition categories for visualizations & tests
Fecundity_Samples$Fecundity_Class <- ordered(Fecundity_Samples$Fecundity_Class, levels = c("High (>50,000)", "Low (~1,000s)", "Atresia"))
# Save merged dataset in a worked folder
write.csv(x = Primary_Samples, file = "Worked-Data/Primary_Samples")
write.csv(x = Ambient_Samples, file = "Worked-Data/Ambient_Samples")
write.csv(x = Fecundity_Samples, file = "Worked-Data/Fecundity_Samples")
# Sample Size
# Fecundity data:
fecundity_sample_size_table <- Fecundity_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(fecundity_sample_size_table)
# fecundity_sample_size_table2 <- Fecundity_Samples %>%
#   group_by(Ambient.Or.OAH, Fecundity_Or_Brood_Count, Fecundity_Class) %>%
#   summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
# print(fecundity_sample_size_table2)
pdf("data-images/fecundity_sample_size_table.pdf")
grid.table(fecundity_sample_size_table)
dev.off()
png("data-images/fecundity_sample_size_table.png")
grid.table(fecundity_sample_size_table)
dev.off()
# View Sample Distributions
# Sample Size barplot
# Fecundity data
fecundity_sample_size_barplot <- Fecundity_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Fecundity Sample Size",
x = "Fecundity Class",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(fecundity_sample_size_barplot)
ggsave(filename = "data-images/.png", plot = fecundity_sample_size_barplot, device = "png")
ggsave(filename = "data-images/fecundity_sample_size_barplot.pdf", plot = fecundity_sample_size_barplot, device = "pdf")
# pH
# Summary stats
# Fecundity Count data
Fecundity_Count_Samples %>%
group_by(Ambient.Or.OAH, Pregnant.Or.Atresia) %>%
summarize(count = n(),
median = round(median(pH), 3),
mean = round(mean(pH), 3),
sd = round(sd(pH), 3),
cv = round(sd(pH)/mean(pH), 3)) %>%
ungroup()
# Fecundity Class data
Fecundity_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarize(count = n(),
median = round(median(pH), 3),
mean = round(mean(pH), 3),
sd = round(sd(pH), 3),
cv = round(sd(pH)/mean(pH), 3)) %>%
ungroup()
# pH Scatterplot
# Fecundity Samples
pH_fecundity_count_scatterplot <- ggplot(data = Fecundity_Count_Samples) +
geom_point(aes(x = pH, y = Consensus_Fecundity), colour = "black") +
labs(title = "pH Fecundity Count Samples", x = "pH", y = "Brood Count") +
scale_y_continuous(breaks = c(0, 50000, 90000)) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 15, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 20))
print(pH_fecundity_count_scatterplot)
ggsave(filename = "data-images/pH_fecundity_count_scatterplot.pdf", plot = pH_fecundity_count_scatterplot, device = "pdf")
ggsave(filename = "data-images/pH_fecundity_count_scatterplot.png", plot = pH_fecundity_count_scatterplot, device = "png")
# pH Fecundity Count facet scatterplot by Treatment
pH_fecundity_count_facet_scatterplot_treatment <- ggplot(data = Fecundity_Count_Samples) +
geom_point(aes(x = pH, y = Consensus_Fecundity), colour = "black") +
labs(title = "pH Fecundity Count Samples", x = "pH", y = "Fecundity", ) +
scale_y_continuous(breaks = c(0, 50000, 90000)) +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 15, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 20))
print(pH_fecundity_count_facet_scatterplot_treatment)
# pH Scatterplot
# Fecundity Samples
pH_fecundity_scatterplot <- ggplot(data = Fecundity_Samples) +
geom_point(aes(x = pH, y = Fecundity_Or_Brood_Count), colour = "black") +
labs(title = "pH Fecundity Samples", x = "pH", y = "Brood Count") +
scale_y_continuous(breaks = c(1000, 50000, 90000)) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 15, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(pH_fecundity_scatterplot)
ggsave(filename = "data-images/pH_fecundity_scatterplot.pdf", plot = pH_fecundity_scatterplot, device = "pdf")
ggsave(filename = "data-images/pH_fecundity_scatterplot.png", plot = pH_fecundity_scatterplot, device = "png")
# pH facet scatterplot by Treatment
pH_fecundity_facet_scatterplot_treatment <- ggplot(data = Fecundity_Samples) +
geom_point(aes(x = pH, y = Fecundity_Or_Brood_Count), colour = "black") +
labs(title = "pH Fecundity Samples", x = "pH", y = "Brood Count") +
scale_y_continuous(breaks = c(1000, 50000, 90000)) +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 15, hjust = 0.5),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(pH_fecundity_facet_scatterplot_treatment)
# pH facet scatterplot by Fecundity Class
pH_fecundity_facet_scatterplot_fecundity_class <- ggplot(data = Fecundity_Samples) +
geom_point(aes(x = pH, y = Fecundity_Or_Brood_Count), colour = "black") +
labs(title = "pH Fecundity Samples", x = "pH", y = "Brood Count") +
scale_y_continuous(breaks = c(1000, 50000, 90000)) +
facet_wrap(~ Fecundity_Class) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
plot.title = element_text(size = 15, hjust = 0.5),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
print(pH_fecundity_facet_scatterplot_fecundity_class)
# pH boxplot
# Fecundity Samples
pH_fecundity_boxplot <- ggplot(data = Fecundity_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = pH)) +
geom_point(aes(x = Fecundity_Class, y = pH), alpha = 0.5, colour = "black") +
labs(title = "pH", x = "Fecundity Class", y = "pH") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(pH_fecundity_boxplot)
ggsave(filename = "data-images/pH_fecundity_boxplot.pdf", plot = pH_fecundity_boxplot, device = "pdf")
ggsave(filename = "data-images/pH_fecundity_boxplot.png", plot = pH_fecundity_boxplot, device = "png")
# pH faceted boxplot
pH_fecundity_facet_boxplot <- ggplot(data = Fecundity_Samples) +
geom_boxplot(aes(x = Fecundity_Class, y = pH)) +
geom_point(aes(x = Fecundity_Class, y = pH), alpha = 0.5, colour = "black") +
labs(title = "pH", x = "Fecundity Class", y = "pH") +
facet_wrap(~ Ambient.Or.OAH) +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 20, hjust = 0.5),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
print(pH_fecundity_facet_boxplot)
ggsave(filename = "data-images/pH_fecundity_facet_boxplot.pdf", plot = pH_fecundity_facet_boxplot, device = "pdf")
ggsave(filename = "data-images/pH_fecundity_facet_boxplot.png", plot = pH_fecundity_facet_boxplot, device = "png")
# pH
# Parametric Assumptions
# Data Distribution
# Fecundity Samples
# Frequency Histograms
hist(Fecundity_Samples$pH)
plotNormalHistogram(Fecundity_Samples$pH)
# Density plot
Fecundity_Samples %>%
ggplot(aes(x = pH)) +
stat_function(fun = dnorm, args = c(mean = mean(Fecundity_Samples$pH), sd = sd(Fecundity_Samples$pH)), aes(col = "Normal Distribution"), show.legend = TRUE) +
geom_density(aes(col = "Sample Density"), show.legend = TRUE) +
labs(title = "pH Fecundity Sample Distribution") +
scale_color_manual("Distribution", values = c("Normal Distribution" = "green", "Sample Density" = "black"))
# Density by brood condition
Fecundity_Samples %>%
ggplot(aes(x = pH)) +
geom_density(aes(x = pH, fill = Fecundity_Class), alpha = 0.5)
ggplot(Fecundity_Samples, aes(x = pH)) +
geom_density(aes(x = pH)) +
facet_wrap(~ Fecundity_Class)
plotNormalDensity(Fecundity_Samples$pH)
# pH Fecundity data
# Install flexplot
# devtools::install_github("dustinfife/flexplot", ref="development")
require(flexplot)
# Fecundity Count Only data lmer (without atresia ids)
pH_fecundity_only_lmer <- lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1 | Ambient.Or.OAH), data = Fecundity_Samples)
visualize(pH_fecundity_only_lmer, plot = "model", replace = TRUE)
# Fecundity Count lmer: (with atresia ids)
pH_fecundity_count_lmer <- lmer(pH ~ Consensus_Fecundity + Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Fecundity_Count_Samples)
visualize(pH_fecundity_count_lmer, plot = "model", replace = TRUE)
# Fecundity categorical class lmer
pH_fecundity_class_lmer <- lmer(pH ~ Ambient.Or.OAH + Fecundity_Class + (1|Fecundity_Class), data = Fecundity_Samples)
visualize(pH_fecundity_class_lmer, plot = "model", replace = TRUE)
# pH
# Parametric Assumptions:
# Assessing Normality
# Fecundity Count Data
# model summary:
# Without atresia patients
summary(pH_fecundity_only_lmer)
# With atresia patients
summary(pH_fecundity_count_lmer) # significant
# With Fecundity Class
summary(pH_fecundity_class_lmer) # significant
# Make model residuals
pH_fecundity_only_res_lmer <- residuals(pH_fecundity_only_lmer)
pH_fecundity_count_res_lmer <- residuals(pH_fecundity_count_lmer)
pH_fecundity_class_res_lmer <- residuals(pH_fecundity_class_lmer)
# Shapiro test
shapiro.test(pH_fecundity_only_res_lmer)
shapiro.test(pH_fecundity_count_res_lmer)
shapiro.test(pH_fecundity_class_res_lmer)
# pH simulated residuals plot
pH_fecundity_only_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_only_lmer)
plot(pH_fecundity_only_simres_plot)
pH_fecundity_count_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_count_lmer)
plot(pH_fecundity_count_simres_plot)
pH_fecundity_class_simres_plot <- simulateResiduals(fittedModel = pH_fecundity_class_lmer)
plot(pH_fecundity_class_simres_plot)
# Qqplots of model
pH_fecundity_only_res_qqplot <- ggqqplot(residuals(pH_fecundity_only_lmer)) +
labs(title = "Fecundity Only pH Residual QQplot",
subtitle = "lmer(pH ~ Fecundity_Or_Brood_Count + Ambient.Or.OAH + (1|), data = Fecundity_Samples)", x = "pH Theoretical Quantiles (Predicted values)", y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 7))
print(pH_fecundity_only_res_qqplot)
pH_fecundity_count_res_qqplot <- ggqqplot(residuals(pH_fecundity_count_lmer)) +
labs(title = "Fecundity Count pH Residual QQplot",
subtitle = "lmer(pH ~ Consensus_Fecundity + Ambient.Or.OAH + (1|Pregnant.Or.Atresia), data = Fecundity_Count_Samples)", x = "pH Theoretical Quantiles (Predicted values)", y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 7))
print(pH_fecundity_count_res_qqplot)
pH_fecundity_class_res_qqplot <- ggqqplot(residuals(pH_fecundity_class_lmer)) +
labs(title = "Fecundity Class pH Residual QQplot",
subtitle = "lmer(pH ~ Fecundity_Class + Ambient.Or.OAH + (1|), data = Fecundity_Samples)", x = "pH Theoretical Quantiles (Predicted values)", y = "pH Sample Quantiles") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5, size = 7))
print(pH_fecundity_class_res_qqplot)
bartlett.test(pH_fecundity_only_res_lmer ~ Fecundity_Samples$Fecundity_Or_Brood_Count)
# test with lmer
bartlett.test(pH ~ Fecundity_Or_Brood_Count)
# test with lmer
bartlett.test(pH ~ Fecundity_Or_Brood_Count, data = Fecundity_Samples)
bartlett.test(pH_fecundity_only_res_lmer ~ Fecundity_Samples$Fecundity_Or_Brood_Count)
bartlett.test(pH_fecundity_only_res_lmer ~ pH$Fecundity_Or_Brood_Count, data = Fecundity_Samples)
# test with lmer
bartlett.test(pH_fecundity_only_res_lmer ~ Fecundity_Samples$Fecundity_Or_Brood_Count)
# test with lmer
bartlett.test(pH ~ Consensus_Fecundity, Fecundity_Count_Samples)
# test with lmer
bartlett.test(pH ~ Consensis_Fecundity, Fecundity_Samples)
View(Fecundity_Samples)
# test with lmer
bartlett.test(pH ~ Fecundity_Class, Fecundity_Samples)
pH_fecundity_only_aov_int <- aov(pH ~ Consensus_fecundity * Ambient.Or.OAH, data = Fecundity_Only_Samples)
summary(pH_fecundity_only_aov_int)
pH_fecundity_only_aov_int <- aov(pH ~ Consensus_fecundity * Ambient.Or.OAH, data = Fecundity_Samples)
summary(pH_fecundity_only_aov_int)
pH_fecundity_count_aov_int <- aov(pH ~ Consensus_fecundity * Ambient.Or.OAH, data = Fecundity_Count_Samples)
pH_fecundity_only_aov_int <- aov(pH ~ Consensus_Fecundity * Ambient.Or.OAH, data = Fecundity_Samples)
summary(pH_fecundity_only_aov_int)
pH_aov_fecundity <- aov(pH ~ Fecundity_Class, data = Fecundity_Samples)
summary(pH_aov_fecundity)
TukeyHSD(pH_aov_fecundity)
