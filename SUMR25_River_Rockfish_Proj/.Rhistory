ABL_set4 <- ABL_set3 %>%
mutate(across(where(is.character), ~ na_if(., "")))
View(ABL_set4)
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
# Read and call data into df
# Primary samples df
ABL90 <- read.csv("Raw_Data/ABL90_Raw.csv")
# Metadata
metadata_atresia_guide <- read.csv("Raw_Data/2024_Atresiafish_Guide2.csv")
# River's Parturition metadata
partuition_subcat <- read.csv("Raw_Data/River's_Rockfish_Metadata_Parturition_V2.csv")
# Data sifting: ABL90 dataset
# Step 1: Remove missing info
ABL_set1 <- ABL90 %>%
filter(Patient.ID_edited != "")
# Step 2: Separate Patient.ID into columns of sample types: blood plasma and instant freeze plasma
ABL_set2 <- separate(ABL_set1, 'Patient.ID_edited', into = c("Patient.ID_edited", "Sample_Type"), sep = ",")
# Step 3:
# Convert Patient.ID_edited column data to character type
ABL_set2$Patient.ID_edited <- as.character(ABL_set2$Patient.ID_edited)
ABL_set3 <- ABL_set2
View(ABL_set3)
ABL_set3 %>%
mutate(across(where(is.character), ~ na_if(., "")))
ABL_set4 <- ABL_set3 %>%
mutate(Errors.detected.during.measurement = na_if(Errors.detected.during.measurement, ""))
ABL_set4 <- ABL_set3 %>%
mutate(across(where(is.character), ~ na_if(., "")))
ABL_set4 <- ABL_set3 %>%
mutate(across(where(is.character), ~ na_if(., "")))
ABL_set5 <- ABL_set4 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Insufficient sample"))
ABL_set5 <- ABL_set5 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Inhomogeneous sample"))
ABL_b_samp <- ABL_set5 %>%
filter(Sample_Type == "b")
View(ABL_b_samp)
View(ABL_set4)
# Rename columns to match: Fish.ID to patient.ID_edited, so join can be done
# Note: "post-partuition" spelling error, correct as "post-parturition" or pregnant
# Rename column and variables:
metadata_atresia_guide <- metadata_atresia_guide %>%
mutate(Patient.ID_edited = Fish.ID) %>%
mutate(Pregnant.or.Atresia = ifelse(Pregnant.or.Atresia == "Post-Partuition", "Post-Parturition", Pregnant.or.Atresia))
# %>% rename("Treatment" = "Ambient.or.OAH")
# Retain original name of Ambient.or.OAH col for easy identification, as not all 'Treatment' cols across metadata sheets are correct
ABL_merged <- metadata_atresia_guide %>%
inner_join(ABL_b_samp, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing)) # Removing individuals not in metadata set
View(ABL_merged)
metadata_atresia_guide %>%
mutate(Patient.ID_edited = Fish.ID) %>%
mutate(Pregnant.or.Atresia = ifelse(Pregnant.or.Atresia == "Post-Partuition", "Post-Parturition", Pregnant.or.Atresia))
metadata_atresia_guide %>%
inner_join(ABL_b_samp, by = "Patient.ID_edited")
View(ABL_b_samp)
View(metadata_atresia_guide)
View(metadata_atresia_guide)
metadata_atresia_guide %>%
mutate(Patient.ID_edited = Fish.ID)
View(metadata_atresia_guide)
ABL_b_samp %>%
inner_join(metadata_atresia_guide, by = "Patient.ID_edited")
ABL_b_samp %>%
left_join(metadata_atresia_guide, by = "Patient.ID_edited")
ABL_b_samp %>%
left_join(metadata_atresia_guide, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
metadata_atresia_guide %>%
inner_join(ABL_b_samp, by = "Patient.ID_edited")
metadata_atresia_guide %>%
left_join(ABL_b_samp, by = "Patient.ID_edited")
metadata_atresia_guide %>%
left_join(ABL_b_samp, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing)) # Removing individuals not in metadata set
metadata_atresia_guide %>%
left_join(ABL_b_samp, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
ABL_b_samp %>%
left_join(metadata_atresia_guide, by = "Patient.ID_edited")
metadata_atresia_guide %>%
left_join(ABL_b_samp, by = "Patient.ID_edited")
?inner_join
ABL_b_samp %>%
left_join(metadata_atresia_guide, by = "Patient.ID_edited")
metadata_atresia_guide %>%
left_join(ABL_b_samp, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
ABL_merged <- metadata_atresia_guide %>%
left_join(ABL_b_samp, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing)) # Removing individuals not in metadata set
View(ABL_merged)
# Rename columns to match: Change 'ID' in parturition_subcat to 'Patient.ID_edited' so it is ready to join with ABL90 df
# Please note the 'Treatment' col in parturition_subcat does not match with the finalized 'Ambient.Or.OAH' col in metadata_atresia_guide or ABL90_merged df
# Rename 'ID' col to 'patient.ID_edited'
partuition_subcat <- partuition_subcat %>%
mutate(Patient.ID_edited = ID)
# Connect main ABL90 dataset with my (River's) sub categorized parturition metadata
# Test procedure: See what IDs are missing between dfs...
merge_test <- ABL_merged %>%
left_join(partuition_subcat, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
merge_test2 <- partuition_subcat %>%
right_join(ABL_merged, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
# The working merged df (ABL90 & sub parturition dfs)
ABL_sub_parturion_merged <- partuition_subcat %>%
inner_join(ABL_merged, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
# Done so to preserve row #s of original ABL_merged (so replicate rows can easily be identified, selected, and removed)
All_merged <- partuition_subcat %>%
inner_join(ABL_merged, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
# Alternative merged used to preserve all ABL_merged IDs
ABL_sub_parturion_merged2 <- partuition_subcat %>%
right_join(ABL_merged, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
ABL_sub_parturion_merged3 <- partuition_subcat %>%
left_join(ABL_merged, by = "Patient.ID_edited") %>%
filter(!is.na(Date.of.processing))
View(All_merged)
View(partuition_subcat)
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
# Read and call data into df
# Primary samples df
ABL90 <- read.csv("Raw_Data/ABL90_Raw.csv")
# River's Parturition metadata
partuition_subcat <- read.csv("Raw_Data/River's_Rockfish_Metadata_Parturition_V4_Treatment_and_reproductive_outcome.csv")
View(partuition_subcat)
View(ABL90)
# Data sifting: ABL90 dataset
# Step 1: Remove missing info
ABL_set1 <- ABL90 %>%
filter(Patient.ID_edited != "")
# Step 2: Separate Patient.ID into columns of sample types: blood plasma and instant freeze plasma
ABL_set2 <- separate(ABL_set1, 'Patient.ID_edited', into = c("Patient.ID_edited", "Sample_Type"), sep = ",")
# Step 3:
# Convert Patient.ID_edited column data to character type
ABL_set2$Patient.ID_edited <- as.character(ABL_set2$Patient.ID_edited)
ABL_set3 <- ABL_set2
# Step 4
# Assign NA value to only `Errors.detected.during.measurement` column
ABL_set4 <- ABL_set3 %>%
mutate(Errors.detected.during.measurement = na_if(Errors.detected.during.measurement, ""))
# Alternative Method: Assign NAs to all character columns
# ABL_set4 <- ABL_set3 %>%
# mutate(across(where(is.character), ~ na_if(., "")))
# Step 5 & 6: Sussing out specific sample errors
# Remove insufficient samples
ABL_set5 <- ABL_set4 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Insufficient sample"))
# Remove inhomogeneous samples
ABL_set5 <- ABL_set5 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Inhomogeneous sample"))
# Step 6: Filter for only blood samples
ABL_b_samp <- ABL_set5 %>%
filter(Sample_Type == "b")
# Rename columns to match: Change 'ID' in parturition_subcat to 'Patient.ID_edited' so it is ready to join with ABL90 df
# Please note the 'Treatment' col in parturition_subcat does not match with the finalized 'Ambient.Or.OAH' col in metadata_atresia_guide or ABL90_merged df
# Rename 'ID' col to 'patient.ID_edited'
partuition_subcat <- partuition_subcat %>%
mutate(Patient.ID_edited = ID)
# Connect main ABL90 dataset with my (River's) sub categorized parturition metadata
ABL_merged <- partuition_subcat %>%
left_join(ABL_b_samp, by = "Patient.ID_edited")
View(partuition_subcat)
View(ABL_merged)
# Save merged dataset in a worked folder
write.csv(x = ABL_merged, file = "data-worked/Rendered_ABL_merged")
# Save merged dataset in a worked folder
write.csv(x = ABL_merged, file = "Worked-Data/Rendered_ABL_merged")
ABL_merged <- ABL_merged %>%
rename(Ambient.Or.OAH = Ambient_Or_OAH_on_2024_Atresiafish_Guide2.csv)
View(ABL_merged)
sample_size_table <- ABL_merged %>%
group_by(Ambient.Or.OAH, Pregnant.or.Atresia) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
ABL_merged <- ABL_merged %>%
rename(Ambient.Or.OAH = Ambient_Or_OAH_on_2024_Atresiafish_Guide2.csv,
Pregnant.or.Atresia = Pregnant_Or_Atresia_on_2024_Atresiafish_Guide2.csv)
ABL_merged <- ABL_merged %>%
rename(Ambient.Or.OAH = Ambient_Or_OAH_on_2024_Atresiafish_Guide2.csv) %>%
rename(Pregnant.or.Atresia = Pregnant_Or_Atresia_on_2024_Atresiafish_Guide2.csv)
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
# Read and call data into df
# Primary samples df
ABL90 <- read.csv("Raw_Data/ABL90_Raw.csv")
# River's Parturition metadata
partuition_subcat <- read.csv("Raw_Data/River's_Rockfish_Metadata_Parturition_V4_Treatment_and_reproductive_outcome.csv")
# Data sifting: ABL90 dataset
# Step 1: Remove missing info
ABL_set1 <- ABL90 %>%
filter(Patient.ID_edited != "")
# Step 2: Separate Patient.ID into columns of sample types: blood plasma and instant freeze plasma
ABL_set2 <- separate(ABL_set1, 'Patient.ID_edited', into = c("Patient.ID_edited", "Sample_Type"), sep = ",")
# Step 3:
# Convert Patient.ID_edited column data to character type
ABL_set2$Patient.ID_edited <- as.character(ABL_set2$Patient.ID_edited)
ABL_set3 <- ABL_set2
# Step 4
# Assign NA value to only `Errors.detected.during.measurement` column
ABL_set4 <- ABL_set3 %>%
mutate(Errors.detected.during.measurement = na_if(Errors.detected.during.measurement, ""))
# Alternative Method: Assign NAs to all character columns
# ABL_set4 <- ABL_set3 %>%
# mutate(across(where(is.character), ~ na_if(., "")))
# Step 5 & 6: Sussing out specific sample errors
# Remove insufficient samples
ABL_set5 <- ABL_set4 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Insufficient sample"))
# Remove inhomogeneous samples
ABL_set5 <- ABL_set5 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Inhomogeneous sample"))
# Step 6: Filter for only blood samples
ABL_b_samp <- ABL_set5 %>%
filter(Sample_Type == "b")
# Rename columns to match: Change 'ID' in parturition_subcat to 'Patient.ID_edited' so it is ready to join with ABL90 df
# Please note the 'Treatment' col in parturition_subcat does not match with the finalized 'Ambient.Or.OAH' col in metadata_atresia_guide or ABL90_merged df
# Rename 'ID' col to 'patient.ID_edited'
partuition_subcat <- partuition_subcat %>%
mutate(Patient.ID_edited = ID)
# Connect main ABL90 dataset with my (River's) sub categorized parturition metadata
ABL_merged <- partuition_subcat %>%
left_join(ABL_b_samp, by = "Patient.ID_edited")
ABL_merged <- ABL_merged %>%
rename(Ambient.Or.OAH = Ambient_Or_OAH_on_2024_Atresiafish_Guide2.csv,
Pregnant.or.Atresia = Pregnant_Or_Atresia_on_2024_Atresiafish_Guide2.csv)
# Save merged dataset in a worked folder
write.csv(x = ABL_merged, file = "Worked-Data/Rendered_ABL_merged")
sample_size_table <- ABL_merged %>%
group_by(Ambient.Or.OAH, Pregnant.or.Atresia) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(sample_size_table)
pdf("data-images/sample_size_table.pdf")
grid.table(sample_size_table)
dev.off()
png("data-images/sample_size_table.png")
grid.table(sample_size_table)
dev.off()
sample_size_table <- ABL_merged %>%
group_by(Ambient.Or.OAH, Pregnant.or.Atresia) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(sample_size_table)
pdf("data-images/sample_size_table.pdf")
grid.table(sample_size_table)
dev.off()
png("data-images/sample_size_table.png")
grid.table(sample_size_table)
dev.off()
ABL_merged %>%
group_by(Ambient.Or.OAH, Pregnant.or.Atresia, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(sample_size_table)
ABL_merged %>%
group_by(Ambient.Or.OAH, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(sample_size_table)
ABL_merged %>%
group_by(Ambient.Or.OAH, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(sample_size_table)
ABL_merged %>%
group_by(Ambient.Or.OAH, Pregnant.or.Atresia, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(sample_size_table)
ABL_merged %>%
group_by(Pregnant.or.Atresia, Last.known.treatment) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Last.known.treatment) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Ambient.Or.OAH) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Ambient.Or.OAH) +
labs(title = "Sample Size Of Experimental Groups For Female Gopher Rockfish",
x = "Parturition Status & Treatment Type",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Reproductive State"))) +
theme_classic(base_size = 10)
# View Sample Distributions
sample_size_barplot2 <- ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Ambient.Or.OAH) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
print(sample_size_barplot2)
ggsave(filename = "data-images/sample_size_barplot2.png", plot = sample_size_barplot2, device = "png")
ggsave(filename = "data-images/sample_size_barplot2.pdf", plot = sample_size_barplot2, device = "pdf")
# Figured it out here
sample_size_barplot <- ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Ambient.Or.OAH) +
labs(title = "Sample Size Of Experimental Groups For Female Gopher Rockfish",
x = "Parturition Status & Treatment Type",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Reproductive State"))) +
theme_classic(base_size = 10)
print(sample_size_barplot)
ggsave(filename = "data-images/sample_size_barplot.png", plot = sample_size_barplot, device = "png")
ggsave(filename = "data-images/sample_size_barplot.pdf", plot = sample_size_barplot, device = "pdf")
# View Sample Distributions
sample_size_barplot2 <- ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Ambient.Or.OAH) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
print(sample_size_barplot2)
ggsave(filename = "data-images/sample_size_barplot2.png", plot = sample_size_barplot2, device = "png")
ggsave(filename = "data-images/sample_size_barplot2.pdf", plot = sample_size_barplot2, device = "pdf")
# Figured it out here
sample_size_barplot <- ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Ambient.Or.OAH) +
labs(title = "Sample Size Of Experimental Groups For Female Gopher Rockfish",
x = "Parturition Status & Treatment Type",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Reproductive State"))) +
theme_classic(base_size = 10)
print(sample_size_barplot)
ggsave(filename = "data-images/sample_size_barplot.png", plot = sample_size_barplot, device = "png")
ggsave(filename = "data-images/sample_size_barplot.pdf", plot = sample_size_barplot, device = "pdf")
# View Sample Distributions
sample_size_barplot2 <- ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(Brood_Condition) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
print(sample_size_barplot2)
ggsave(filename = "data-images/sample_size_barplot2.png", plot = sample_size_barplot2, device = "png")
ggsave(filename = "data-images/sample_size_barplot2.pdf", plot = sample_size_barplot2, device = "pdf")
# Figured it out here
sample_size_barplot <- ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(~ Ambient.Or.OAH) +
labs(title = "Sample Size Of Experimental Groups For Female Gopher Rockfish",
x = "Parturition Status & Treatment Type",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Reproductive State"))) +
theme_classic(base_size = 10)
print(sample_size_barplot)
ggsave(filename = "data-images/sample_size_barplot.png", plot = sample_size_barplot, device = "png")
ggsave(filename = "data-images/sample_size_barplot.pdf", plot = sample_size_barplot, device = "pdf")
ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(Ambient.Or.OAH ~ Brood_Condition) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia))
ABL_merged %>%
group_by(Pregnant.or.Atresia, Ambient.Or.OAH, Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Pregnant.or.Atresia, y = n_size, fill = Pregnant.or.Atresia)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(Ambient.Or.OAH ~ Brood_Condition) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
ABL_merged %>%
group_by(Brood_Condition, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Brood_Condition, y = n_size, fill = Ambient.Or.OAH)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
facet_grid(Ambient.Or.OAH ~ Brood_Condition) +
labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
x = "Parturition Outcome",
y = "Sample Size (n)") +
guides(fill = guide_legend((title = "Treatment Type"))) +
theme_classic(base_size = 10)
ABL_merged %>%
group_by(Brood_Condition, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Brood_Condition, y = n_size, fill = Ambient.Or.OAH)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15))
# Test Vis
n_barplot <- ABL_merged %>%
group_by(Brood_Condition, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Brood_Condition, y = n_size, fill = Ambient.Or.OAH)) +
geom_bar(stat = "identity" ) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15))
# +
#   facet_grid(Ambient.Or.OAH ~ Brood_Condition) +
#   labs(title = "Sample Size Of Parturition Status and Treatments On Maternal Gopher Rockfish",
#         x = "Parturition Outcome",
#         y = "Sample Size (n)") +
#   guides(fill = guide_legend((title = "Treatment Type"))) +
#   theme_classic(base_size = 10)
print(n_barplot)
ABL_b_samp %>%
left_join(partuition_subcat, by = "Patient.ID_edited")
ABL_merged <- ABL_b_samp %>%
left_join(partuition_subcat, by = "Patient.ID_edited")
View(ABL_merged)
View(ABL_merged)
