Ambient_Samples$Fecundity_Class <- ordered(Ambient_Samples$Fecundity_Class, levels = c("High (>50,000)", "Low (~1,000s)", "Atresia"))
# Remove NAs from ordered character factors
Ambient_Samples <- Ambient_Samples %>%
filter(Fecundity_Class != is.na(Fecundity_Class)) %>%
filter(Consensus_Brood_Condition != is.na(Consensus_Brood_Condition))
# Ambient Fecundity data
Amb_Fec_No_Atresia_Samples$Ambient.Or.OAH <- ordered(Amb_Fec_No_Atresia_Samples$Ambient.Or.OAH, levels = c("Ambient", "OAH"))
Amb_Fec_No_Atresia_Samples$Ambient.Or.OAH <- ordered(Amb_Fec_No_Atresia_Samples$Pregnant.Or.Atresia, levels = c("Post Parturition", "Atresia"))
Amb_Fec_No_Atresia_Samples$Consensus_Brood_Condition <- ordered(Amb_Fec_No_Atresia_Samples$Consensus_Brood_Condition, levels = c("Excellent", "Normal", "Low", "Atresia"))
Amb_Fec_No_Atresia_Samples$Fecundity_Class <- ordered(Amb_Fec_No_Atresia_Samples$Fecundity_Class, levels = c("High (>50,000)", "Low (~1,000s)", "Atresia"))
# Remove NAs from ordered character factors
Amb_Fec_No_Atresia_Samples <- Amb_Fec_No_Atresia_Samples %>%
filter(Fecundity_Class != is.na(Fecundity_Class)) %>%
filter(Consensus_Brood_Condition != is.na(Consensus_Brood_Condition))
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
library(conover.test) # For the conover.Iman() test function
library(DescTools) # Contain alternative ConoverTest function
library(rstatix) # tidyverse adapted stat tests and mshapiro_test() functions
library(DHARMa) # For multi-level lm models and shapiro test
library(patchwork) # For combining ggplots
# Read and call data into df
# Primary samples df
ABL90 <- read.csv("Raw_Data/ABL90_Raw.csv")
# River's Parturition metadata
partuition_subcat <- read.csv("Raw_Data/River's_Rockfish_Metadata_Parturition_V7.csv")
# Data sifting: ABL90 dataset
# Step 1: Remove missing info
ABL_set1 <- ABL90 %>%
filter(Patient.ID_edited != "")
# Step 2: Separate Patient.ID into columns of sample types: blood plasma and instant freeze plasma
ABL_set2 <- separate(ABL_set1, 'Patient.ID_edited', into = c("Patient.ID_edited", "Sample_Type"), sep = ",")
# Step 3:
# Convert Patient.ID_edited column data to character type
ABL_set2$Patient.ID_edited <- as.character(ABL_set2$Patient.ID_edited)
# Step 4 & 5: Sussing out specific sample errors
# Remove insufficient samples
ABL_set3 <- ABL_set2 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Insufficient sample"))
# Remove inhomogeneous samples
ABL_set3 <- ABL_set3 %>%
filter(!is.na("Type")) %>%
filter(!str_detect(Errors.detected.during.measurement, "Inhomogeneous sample"))
# Step 6: Filter for only blood samples
ABL_b_samp <- ABL_set3 %>%
filter(Sample_Type == "b")
# Rename columns to match: Change 'ID' in parturition_subcat to 'Patient.ID_edited' so it is ready to join with ABL90 df
# Please note the 'Treatment' col in parturition_subcat does not match with the finalized 'Ambient.Or.OAH' col in metadata_atresia_guide or ABL90_merged df
# Rename 'ID' col to 'patient.ID_edited'
partuition_subcat <- partuition_subcat %>%
rename(Patient.ID_edited = ID)
# Connect main ABL90 dataset with my (River's) sub categorized parturition metadata
# ABL_merged <- partuition_subcat %>%
# left_join(ABL_b_samp, by = "Patient.ID_edited")
ABL_merged <- ABL_b_samp %>%
inner_join(partuition_subcat, by = "Patient.ID_edited")
# Rename Treatment & Parturition Outcome
ABL_merged <- ABL_merged %>%
rename(Ambient.Or.OAH = Consensus_General_Treatment,
Pregnant.Or.Atresia = Consensus_Atresia_Or_Pregnant)
# Cross Check all Columns: Cross validation to suss correct replicate row
check_params <- ABL_merged %>%
select(Patient.ID_edited, Time, Sample.., Measuring.Mode, Ambient.Or.OAH, Pregnant.Or.Atresia, pH, Glu..mmol.L., Hct...., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L., pCO2..mmHg.) %>%
filter(Patient.ID_edited == "9782D")
print(check_params)
check_params <- ABL_merged %>%
select(Patient.ID_edited, Time, Sample.., Measuring.Mode, Ambient.Or.OAH, Pregnant.Or.Atresia, pH, Glu..mmol.L., Hct...., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L., pCO2..mmHg.) %>%
filter(Patient.ID_edited == "9783D")
print(check_params)
# Removed replicates: 9782D (2x) and 9783D (2x)
ABL_merged <- ABL_merged %>%
filter(Sample.. != "863",
Sample.. != "934")
# New df with Moralities removed: Note none of these samples made it into ABL90 df anyway, so looks like they are already filtered out.
Live_Samples <- ABL_merged %>%
filter(Patient.ID_edited != "9780C", # Mortality
Patient.ID_edited != "777AE", # Mortality
Patient.ID_edited != "777CA") # Mortality after parturition
# New df with mortality and 'No info' Id's removed
Primary_Samples <- Live_Samples %>%
filter(Patient.ID_edited != "777A0", # No info
Patient.ID_edited != "9782F", # No info
Patient.ID_edited != "777B3", # No info
Patient.ID_edited != "777AA", # No info
Patient.ID_edited != "777DE", # No info
Patient.ID_edited != "777CE", # No info
Patient.ID_edited != "777A6") # No info
# New df of Only Ambient Treatment: For testing parturition success
Ambient_Samples <- Primary_Samples %>%
filter(Ambient.Or.OAH == "Ambient")
# New df of Fecundity Samples:
Fecundity_Samples <- Primary_Samples %>%
filter(Fecundity_Or_Brood_Count != "NA",
Fecundity_Class != "NA") # removes 97706
# Fecundity samples without atresia Ids
Fecundity_No_Atresia_Samples <- Primary_Samples %>%
filter(All_Fecundity != "Na",
All_Fecundity != 0)  # removes atresia IDs
# Fecundity Ambient Samples
Amb_Fec_Samples <- Primary_Samples %>%
filter(Ambient.Or.OAH == "Ambient",
All_Fecundity != "NA") # removes OAH treatment samples and ID 97706
# Fecundity Ambient Samples without atresia Ids
Amb_Fec_No_Atresia_Samples <- Primary_Samples %>%
filter(Ambient.Or.OAH == "Ambient", # removes OAH treatment
All_Fecundity != "NA", # removes all missing info IDs
All_Fecundity != 0) # removes atresia IDs
# Change Continuous Data to type to numeric, double, or factor
# Change data type of ions to factor or numeric
#glimpse(General_Samples)
#glimpse(Ambient_Samples)
Primary_Samples <- Primary_Samples %>%
mutate(across(c(All_Fecundity, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Ambient_Samples <- Ambient_Samples %>%
mutate(across(c(All_Fecundity, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Fecundity_Samples <- Fecundity_Samples %>%
mutate(across(c(All_Fecundity, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Fecundity_No_Atresia_Samples <- Fecundity_Samples %>%
mutate(across(c(All_Fecundity, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Amb_Fec_Samples <- Amb_Fec_Samples %>%
mutate(across(c(All_Fecundity, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
Amb_Fec_No_Atresia_Samples <- Amb_Fec_No_Atresia_Samples %>%
mutate(across(c(All_Fecundity, pH, Hct...., Glu..mmol.L., Na...mmol.L., Cl...mmol.L., K...mmol.L., Ca....mmol.L.), as.numeric))
# glimpse(Primary_Samples)
# glimpse(Ambient_Samples)
# glimpse(Fecundity_Samples)
# glimpse(Amb_Fec_Samples)
# Fecundity data
#unique(Fecundity_Samples$Fecundity_Class)
# Arrange the order of parturition categories for visualizations & tests
# Primary Samples
# Arrange Treatment
Primary_Samples$Ambient.Or.OAH <- ordered(Primary_Samples$Ambient.Or.OAH, levels = c("Ambient", "OAH"))
# Arrange Parturition outcome
Primary_Samples$Pregnant.Or.Atresia <- ordered(Primary_Samples$Pregnant.Or.Atresia, levels = c("Post Parturition", "Atresia"))
# Arrange Brood Condition
Primary_Samples$Consensus_Brood_Condition <- ordered(Primary_Samples$Consensus_Brood_Condition, levels = c("Excellent", "Normal", "Low", "Very Low", "Atresia"))
# Arrange Fecundity Class
Primary_Samples$Fecundity_Class <- ordered(Primary_Samples$Fecundity_Class, levels = c("High (>50,000)", "Low (~1,000s)", "Atresia"))
# Remove NAs from ordered character factors
Primary_Samples <- Primary_Samples %>%
filter(Fecundity_Class != is.na(Fecundity_Class)) %>%
filter(Consensus_Brood_Condition != is.na(Consensus_Brood_Condition))
# Ambient data
Ambient_Samples$Ambient.Or.OAH <- ordered(Ambient_Samples$Ambient.Or.OAH, levels = c("Ambient", "OAH"))
Ambient_Samples$Pregnant.Or.Atresia <- ordered(Ambient_Samples$Pregnant.Or.Atresia, levels = c("Post Parturition", "Atresia"))
Ambient_Samples$Consensus_Brood_Condition <- ordered(Ambient_Samples$Consensus_Brood_Condition, levels = c("Excellent", "Normal", "Low", "Atresia"))
Ambient_Samples$Fecundity_Class <- ordered(Ambient_Samples$Fecundity_Class, levels = c("High (>50,000)", "Low (~1,000s)", "Atresia"))
# Remove NAs from ordered character factors
Ambient_Samples <- Ambient_Samples %>%
filter(Fecundity_Class != is.na(Fecundity_Class)) %>%
filter(Consensus_Brood_Condition != is.na(Consensus_Brood_Condition))
# Ambient Fecundity data
Amb_Fec_No_Atresia_Samples$Ambient.Or.OAH <- ordered(Amb_Fec_No_Atresia_Samples$Ambient.Or.OAH, levels = c("Ambient", "OAH"))
Amb_Fec_No_Atresia_Samples$Ambient.Or.OAH <- ordered(Amb_Fec_No_Atresia_Samples$Pregnant.Or.Atresia, levels = c("Post Parturition", "Atresia"))
Amb_Fec_No_Atresia_Samples$Consensus_Brood_Condition <- ordered(Amb_Fec_No_Atresia_Samples$Consensus_Brood_Condition, levels = c("Excellent", "Normal", "Low", "Atresia"))
Amb_Fec_No_Atresia_Samples$Fecundity_Class <- ordered(Amb_Fec_No_Atresia_Samples$Fecundity_Class, levels = c("High (>50,000)", "Low (~1,000s)", "Atresia"))
# Remove NAs from ordered character factors
Amb_Fec_No_Atresia_Samples <- Amb_Fec_No_Atresia_Samples %>%
filter(Fecundity_Class != is.na(Fecundity_Class)) %>%
filter(Consensus_Brood_Condition != is.na(Consensus_Brood_Condition))
# Save merged dataset in a worked folder
write.csv(x = Primary_Samples, file = "Worked-Data/Primary_Samples")
write.csv(x = Ambient_Samples, file = "Worked-Data/Ambient_Samples")
write.csv(x = Fecundity_Samples, file = "Worked-Data/Fecundity_Samples")
write.csv(x = Fecundity_No_Atresia_Samples, file = "Worked-Data/Fecundity_No_Atresia_Samples")
write.csv(x = Amb_Fec_Samples, file = "Worked-Data/Amb-Fec_Samples")
write.csv(x = Amb_Fec_No_Atresia_Samples, file = "Worked-Data/Amb_Fec_No_Atresia_Samples")
# Save merged dataset in a worked folder
write.csv(x = Primary_Samples, file = "Worked-Data/Primary_Samples")
write.csv(x = Ambient_Samples, file = "Worked-Data/Ambient_Samples")
write.csv(x = Fecundity_Samples, file = "Worked-Data/Fecundity_Samples")
write.csv(x = Fecundity_No_Atresia_Samples, file = "Worked-Data/Fecundity_No_Atresia_Samples")
write.csv(x = Amb_Fec_Samples, file = "Worked-Data/Amb-Fec_Samples")
write.csv(x = Amb_Fec_No_Atresia_Samples, file = "Worked-Data/Amb_Fec_No_Atresia_Samples")
# Sample Size
# Ambient data:
ambient_sample_size_table <- Ambient_Samples %>%
group_by(Ambient.Or.OAH, Consensus_Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(ambient_sample_size_table)
pdf("data-images/ambient_sample_size_table.pdf")
grid.table(ambient_sample_size_table)
dev.off()
png("data-images/ambient_sample_size_table.png")
grid.table(ambient_sample_size_table)
dev.off()
# Sample Size
# Ambient data:
ambient_sample_size_table <- Ambient_Samples %>%
group_by(Ambient.Or.OAH, Consensus_Brood_Condition) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(ambient_sample_size_table)
pdf("data-images/ambient_sample_size_table.pdf")
grid.table(ambient_sample_size_table)
dev.off()
png("data-images/ambient_sample_size_table.png")
grid.table(ambient_sample_size_table)
dev.off()
ambient_fecundity_class_sample_size_table <- Ambient_Samples %>%
group_by(Ambient.Or.OAH, Fecundity_Class) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop")
print(ambient_fecundity_class_sample_size_table)
pdf("data-images/ambient_fecundity_class_sample_size_table.pdf")
grid.table(ambient_fecundity_class_sample_size_table)
dev.off()
png("data-images/ambient_fecundity_class_sample_size_table.png")
grid.table(ambient_fecundity_class_sample_size_table)
dev.off()
# View Sample Distributions
# Sample Size barplot
# Ambient Samples
ambient_sample_size_barplot <- Ambient_Samples %>%
group_by(Consensus_Brood_Condition, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Consensus_Brood_Condition, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(ambient_sample_size_barplot)
ggsave(filename = "data-images/.png", plot = ambient_sample_size_barplot, device = "png")
ggsave(filename = "data-images/ambient_sample_size_barplot.pdf", plot = ambient_sample_size_barplot, device = "pdf")
# View Sample Distributions
# Sample Size barplot
# Ambient Samples
# Consensus brood condition sample barplot
ambient_sample_size_barplot <- Ambient_Samples %>%
group_by(Consensus_Brood_Condition, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Consensus_Brood_Condition, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(ambient_sample_size_barplot)
ggsave(filename = "data-images/.png", plot = ambient_sample_size_barplot, device = "png")
ggsave(filename = "data-images/ambient_sample_size_barplot.pdf", plot = ambient_sample_size_barplot, device = "pdf")
# Fecundity class sample barplot
ambient_sample_size_barplot2 <- Ambient_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(ambient_sample_size_barplot2)
ggsave(filename = "data-images/.png", plot = ambient_sample_size_barplot2, device = "png")
ggsave(filename = "data-images/ambient_sample_size_barplot2.pdf", plot = ambient_sample_size_barplot2, device = "pdf")
# View Sample Distributions
# Sample Size barplot
# Ambient Samples
# Consensus brood condition sample barplot
ambient_sample_size_barplot <- Ambient_Samples %>%
group_by(Consensus_Brood_Condition, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Consensus_Brood_Condition, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(ambient_sample_size_barplot)
ggsave(filename = "data-images/.png", plot = ambient_sample_size_barplot, device = "png")
ggsave(filename = "data-images/ambient_sample_size_barplot.pdf", plot = ambient_sample_size_barplot, device = "pdf")
# Fecundity class sample barplot
ambient_sample_size_barplot2 <- Ambient_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(ambient_sample_size_barplot2)
ggsave(filename = "data-images/.png", plot = ambient_sample_size_barplot2, device = "png")
ggsave(filename = "data-images/ambient_sample_size_barplot2.pdf", plot = ambient_sample_size_barplot2, device = "pdf")
# Amb Fec No atresia sample size
amb_fec_no_atresia_barplot <- Amb_Fec_No_Atresia_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient No Atresia Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(amb_fec_no_atresia_barplot)
ggsave(filename = "data-images/.png", plot = amb_fec_no_atresia_barplot, device = "png")
ggsave(filename = "data-images/amb_fec_no_atresia_barplot.pdf", plot = amb_fec_no_atresia_barplot, device = "pdf")
# View Sample Distributions
# Sample Size barplot
# Ambient Samples
# Consensus brood condition sample barplot
ambient_sample_size_barplot <- Ambient_Samples %>%
group_by(Consensus_Brood_Condition, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Consensus_Brood_Condition, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(ambient_sample_size_barplot)
ggsave(filename = "data-images/.png", plot = ambient_sample_size_barplot, device = "png")
ggsave(filename = "data-images/ambient_sample_size_barplot.pdf", plot = ambient_sample_size_barplot, device = "pdf")
# Fecundity class sample barplot
ambient_sample_size_barplot2 <- Ambient_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(0, 3, 6, 9, 12, 15)) +
labs(title = "Ambient Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(ambient_sample_size_barplot2)
ggsave(filename = "data-images/.png", plot = ambient_sample_size_barplot2, device = "png")
ggsave(filename = "data-images/ambient_sample_size_barplot2.pdf", plot = ambient_sample_size_barplot2, device = "pdf")
# Amb Fec No atresia sample size
amb_fec_no_atresia_barplot <- Amb_Fec_No_Atresia_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 15.5), breaks = c(4, 8, 12)) +
labs(title = "Ambient No Atresia Sample Size",
x = "Parturition Outcome",
y = "Sample Size (n)") +
theme_classic() +
theme(panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white", color = "black"),
title = element_text(size = 12),
plot.title = element_text(size = 30, hjust = 0.5),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 20),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20))
print(amb_fec_no_atresia_barplot)
ggsave(filename = "data-images/.png", plot = amb_fec_no_atresia_barplot, device = "png")
ggsave(filename = "data-images/amb_fec_no_atresia_barplot.pdf", plot = amb_fec_no_atresia_barplot, device = "pdf")
amb_fec_no_atresia_barplot <- Amb_Fec_No_Atresia_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH)
amb_fec_no_atresia_barplot <- Amb_Fec_No_Atresia_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH)
amb_fec_no_atresia_barplot <- Amb_Fec_No_Atresia_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH)
Amb_Fec_No_Atresia_Samples %>%
group_by(Fecundity_Class, Ambient.Or.OAH) %>%
summarise(n_size = n_distinct(Patient.ID_edited), .groups = "drop") %>%
ggplot(aes(x = Fecundity_Class, y = n_size)) +
geom_bar(stat = "identity") +
facet_grid(~ Ambient.Or.OAH)
# Setup
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(gridExtra) # For using grid.table to save tables as images
library(flextable) # Alternative method to save df as image
library(tidyverse)
library(zoo)
library(lme4)
library(lmerTest)
library(rlang)
library(nortest) # For ad.test
library(car) # For homogeneity of variance with leveneTest
library(rcompanion) # For scheirerRayHare test
library(pastecs) # For stat.desc
library(ggpubr) # For assumption plots
library(conover.test) # For the conover.Iman() test function
library(DescTools) # Contain alternative ConoverTest function
library(rstatix) # tidyverse adapted stat tests and mshapiro_test() functions
library(DHARMa) # For multi-level lm models and shapiro test
library(patchwork) # For combining ggplots
# Read and call data into df
# Primary samples df
ABL90 <- read.csv("Raw_Data/ABL90_Raw.csv")
# River's Parturition metadata
partuition_subcat <- read.csv("Raw_Data/River's_Rockfish_Metadata_Parturition_V7.csv")
# Data sifting: ABL90 dataset
# Step 1: Remove missing info
ABL_set1 <- ABL90 %>%
filter(Patient.ID_edited != "")
# Step 2: Separate Patient.ID into columns of sample types: blood plasma and instant freeze plasma
ABL_set2 <- separate(ABL_set1, 'Patient.ID_edited', into = c("Patient.ID_edited", "Sample_Type"), sep = ",")
# Step 3:
# Convert Patient.ID_edited column data to character type
ABL_set2$Patient.ID_edited <- as.character(ABL_set2$Patient.ID_edited)
# Step 4 & 5: Sussing out specific sample errors
# Remove insufficient samples
ABL_set3 <- ABL_set2 %>%
filter(!is.na("Type")) %>%
